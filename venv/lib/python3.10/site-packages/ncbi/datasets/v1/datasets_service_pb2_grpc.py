# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from ncbi.datasets.v1 import datasets_pb2 as ncbi_dot_datasets_dot_v1_dot_datasets__pb2
from ncbi.datasets.v1.reports import virus_pb2 as ncbi_dot_datasets_dot_v1_dot_reports_dot_virus__pb2


class AssemblyDatasetStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssemblyMetadata = channel.unary_unary(
                '/ncbi.datasets.v1.AssemblyDataset/GetAssemblyMetadata',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyMetadataRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyMetadata.FromString,
                )
        self.GetDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1.AssemblyDataset/GetDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
                )
        self.Sleep = channel.unary_unary(
                '/ncbi.datasets.v1.AssemblyDataset/Sleep',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepReply.FromString,
                )
        self.SleepStream = channel.unary_stream(
                '/ncbi.datasets.v1.AssemblyDataset/SleepStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepReply.FromString,
                )


class AssemblyDatasetServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAssemblyMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDownloadSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sleep(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SleepStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssemblyDatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssemblyMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssemblyMetadata,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyMetadataRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyMetadata.SerializeToString,
            ),
            'GetDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
            'Sleep': grpc.unary_unary_rpc_method_handler(
                    servicer.Sleep,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepReply.SerializeToString,
            ),
            'SleepStream': grpc.unary_stream_rpc_method_handler(
                    servicer.SleepStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.AssemblyDataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AssemblyDataset(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAssemblyMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.AssemblyDataset/GetAssemblyMetadata',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyMetadataRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyMetadata.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.AssemblyDataset/GetDownloadSummary',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sleep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.AssemblyDataset/Sleep',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SleepStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.AssemblyDataset/SleepStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SleepReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VirusDownloadStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVirusDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1.VirusDownload/GetVirusDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetSars2ProteinDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1.VirusDownload/GetSars2ProteinDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )


class VirusDownloadServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVirusDatasetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSars2ProteinDatasetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VirusDownloadServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVirusDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetVirusDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetSars2ProteinDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSars2ProteinDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.VirusDownload', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VirusDownload(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVirusDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.VirusDownload/GetVirusDatasetStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSars2ProteinDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.VirusDownload/GetSars2ProteinDatasetStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DatasetDownloadStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssemblyDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1.DatasetDownload/GetAssemblyDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetGeneDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1.DatasetDownload/GetGeneDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetMicroBiggeDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1.DatasetDownload/GetMicroBiggeDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.MicroBiggeDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetRefGeneCatalogDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1.DatasetDownload/GetRefGeneCatalogDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.RefGeneCatalogDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetProkaryoteGeneDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1.DatasetDownload/GetProkaryoteGeneDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.ProkaryoteGeneRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.CheckAssemblyAvailability = channel.unary_unary(
                '/ncbi.datasets.v1.DatasetDownload/CheckAssemblyAvailability',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetAvailability.FromString,
                )


class DatasetDownloadServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAssemblyDatasetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGeneDatasetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMicroBiggeDatasetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRefGeneCatalogDatasetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProkaryoteGeneDatasetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckAssemblyAvailability(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasetDownloadServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssemblyDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAssemblyDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetGeneDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetGeneDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetMicroBiggeDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetMicroBiggeDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.MicroBiggeDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetRefGeneCatalogDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetRefGeneCatalogDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.RefGeneCatalogDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetProkaryoteGeneDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProkaryoteGeneDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.ProkaryoteGeneRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'CheckAssemblyAvailability': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckAssemblyAvailability,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetAvailability.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.DatasetDownload', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DatasetDownload(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAssemblyDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.DatasetDownload/GetAssemblyDatasetStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGeneDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.DatasetDownload/GetGeneDatasetStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMicroBiggeDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.DatasetDownload/GetMicroBiggeDatasetStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.MicroBiggeDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRefGeneCatalogDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.DatasetDownload/GetRefGeneCatalogDatasetStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.RefGeneCatalogDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProkaryoteGeneDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.DatasetDownload/GetProkaryoteGeneDatasetStream',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.ProkaryoteGeneRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckAssemblyAvailability(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.DatasetDownload/CheckAssemblyAvailability',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.AssemblyDatasetAvailability.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GeneDatasetStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetGeneDescriptors = channel.unary_unary(
                '/ncbi.datasets.v1.GeneDataset/GetGeneDescriptors',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDescriptors.FromString,
                )
        self.GetGeneMetadata = channel.unary_unary(
                '/ncbi.datasets.v1.GeneDataset/GetGeneMetadata',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneMetadata.FromString,
                )
        self.StreamGeneMetadata = channel.unary_stream(
                '/ncbi.datasets.v1.GeneDataset/StreamGeneMetadata',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneMatch.FromString,
                )
        self.GetDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1.GeneDataset/GetDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
                )
        self.GetOrthologSet = channel.unary_unary(
                '/ncbi.datasets.v1.GeneDataset/GetOrthologSet',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrthologRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrthologSet.FromString,
                )
        self.GetTaxTree = channel.unary_unary(
                '/ncbi.datasets.v1.GeneDataset/GetTaxTree',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Organism.FromString,
                )
        self.GetOrganismsThatMatch = channel.unary_unary(
                '/ncbi.datasets.v1.GeneDataset/GetOrganismsThatMatch',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SciNameAndIds.FromString,
                )


class GeneDatasetServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetGeneDescriptors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGeneMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamGeneMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDownloadSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrthologSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaxTree(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganismsThatMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GeneDatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetGeneDescriptors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGeneDescriptors,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDescriptors.SerializeToString,
            ),
            'GetGeneMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGeneMetadata,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneMetadata.SerializeToString,
            ),
            'StreamGeneMetadata': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamGeneMetadata,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneMatch.SerializeToString,
            ),
            'GetDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
            'GetOrthologSet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrthologSet,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrthologRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrthologSet.SerializeToString,
            ),
            'GetTaxTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaxTree,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxTreeRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Organism.SerializeToString,
            ),
            'GetOrganismsThatMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganismsThatMatch,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrganismQueryRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SciNameAndIds.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.GeneDataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GeneDataset(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetGeneDescriptors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.GeneDataset/GetGeneDescriptors',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDescriptors.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGeneMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.GeneDataset/GetGeneMetadata',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneMetadata.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamGeneMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.GeneDataset/StreamGeneMetadata',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneMatch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.GeneDataset/GetDownloadSummary',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrthologSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.GeneDataset/GetOrthologSet',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrthologRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrthologSet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaxTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.GeneDataset/GetTaxTree',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Organism.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganismsThatMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.GeneDataset/GetOrganismsThatMatch',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SciNameAndIds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VirusDatasetStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1.VirusDataset/GetDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
                )
        self.GetSars2ProteinDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1.VirusDataset/GetSars2ProteinDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
                )
        self.GetVirusGenomeMetadataAsTable = channel.unary_stream(
                '/ncbi.datasets.v1.VirusDataset/GetVirusGenomeMetadataAsTable',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TabularOutput.FromString,
                )
        self.GetSars2ProteinMetadataAsTable = channel.unary_stream(
                '/ncbi.datasets.v1.VirusDataset/GetSars2ProteinMetadataAsTable',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TabularOutput.FromString,
                )
        self.GetVirusDataReports = channel.unary_unary(
                '/ncbi.datasets.v1.VirusDataset/GetVirusDataReports',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDataReportRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_reports_dot_virus__pb2.VirusDataReportPage.FromString,
                )
        self.CheckVirusAvailability = channel.unary_unary(
                '/ncbi.datasets.v1.VirusDataset/CheckVirusAvailability',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusAvailabilityRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusAvailability.FromString,
                )


class VirusDatasetServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDownloadSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSars2ProteinDownloadSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirusGenomeMetadataAsTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSars2ProteinMetadataAsTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirusDataReports(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckVirusAvailability(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VirusDatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
            'GetSars2ProteinDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSars2ProteinDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
            'GetVirusGenomeMetadataAsTable': grpc.unary_stream_rpc_method_handler(
                    servicer.GetVirusGenomeMetadataAsTable,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TabularOutput.SerializeToString,
            ),
            'GetSars2ProteinMetadataAsTable': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSars2ProteinMetadataAsTable,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TabularOutput.SerializeToString,
            ),
            'GetVirusDataReports': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirusDataReports,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDataReportRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_reports_dot_virus__pb2.VirusDataReportPage.SerializeToString,
            ),
            'CheckVirusAvailability': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckVirusAvailability,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusAvailabilityRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusAvailability.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.VirusDataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VirusDataset(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.VirusDataset/GetDownloadSummary',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSars2ProteinDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.VirusDataset/GetSars2ProteinDownloadSummary',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirusGenomeMetadataAsTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.VirusDataset/GetVirusGenomeMetadataAsTable',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TabularOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSars2ProteinMetadataAsTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.VirusDataset/GetSars2ProteinMetadataAsTable',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TabularOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirusDataReports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.VirusDataset/GetVirusDataReports',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusDataReportRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_reports_dot_virus__pb2.VirusDataReportPage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckVirusAvailability(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.VirusDataset/CheckVirusAvailability',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusAvailabilityRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VirusAvailability.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class HttpDatafileStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Fetch = channel.unary_stream(
                '/ncbi.datasets.v1.HttpDatafile/Fetch',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.MethodPayloadRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )


class HttpDatafileServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Fetch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HttpDatafileServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Fetch': grpc.unary_stream_rpc_method_handler(
                    servicer.Fetch,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.MethodPayloadRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.HttpDatafile', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HttpDatafile(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Fetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1.HttpDatafile/Fetch',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.MethodPayloadRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TaxonomyDatasetStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTaxonomyMetadataFor = channel.unary_unary(
                '/ncbi.datasets.v1.TaxonomyDataset/GetTaxonomyMetadataFor',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyMetadataRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyMetadataResponse.FromString,
                )
        self.GetMinimumFilteredSubtree = channel.unary_unary(
                '/ncbi.datasets.v1.TaxonomyDataset/GetMinimumFilteredSubtree',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyFilteredSubtreeRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyFilteredSubtreeResponse.FromString,
                )
        self.GetOrganismsThatMatch = channel.unary_unary(
                '/ncbi.datasets.v1.TaxonomyDataset/GetOrganismsThatMatch',
                request_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SciNameAndIds.FromString,
                )


class TaxonomyDatasetServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTaxonomyMetadataFor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMinimumFilteredSubtree(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganismsThatMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaxonomyDatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTaxonomyMetadataFor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaxonomyMetadataFor,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyMetadataRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyMetadataResponse.SerializeToString,
            ),
            'GetMinimumFilteredSubtree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMinimumFilteredSubtree,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyFilteredSubtreeRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyFilteredSubtreeResponse.SerializeToString,
            ),
            'GetOrganismsThatMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganismsThatMatch,
                    request_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrganismQueryRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SciNameAndIds.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.TaxonomyDataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaxonomyDataset(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTaxonomyMetadataFor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.TaxonomyDataset/GetTaxonomyMetadataFor',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyMetadataRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMinimumFilteredSubtree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.TaxonomyDataset/GetMinimumFilteredSubtree',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyFilteredSubtreeRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.TaxonomyFilteredSubtreeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganismsThatMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.TaxonomyDataset/GetOrganismsThatMatch',
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.SciNameAndIds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GatewayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Version = channel.unary_unary(
                '/ncbi.datasets.v1.Gateway/Version',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VersionReply.FromString,
                )


class GatewayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Version(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VersionReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1.Gateway', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Gateway(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1.Gateway/Version',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ncbi_dot_datasets_dot_v1_dot_datasets__pb2.VersionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
