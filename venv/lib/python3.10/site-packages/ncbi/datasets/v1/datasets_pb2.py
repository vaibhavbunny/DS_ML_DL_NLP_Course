# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ncbi/datasets/v1/datasets.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from ncbi.datasets.options import openapi_pb2 as ncbi_dot_datasets_dot_options_dot_openapi__pb2
from ncbi.datasets.options import request_pb2 as ncbi_dot_datasets_dot_options_dot_request__pb2
from ncbi.datasets.v1 import gene_descriptor_pb2 as ncbi_dot_datasets_dot_v1_dot_gene__descriptor__pb2
from ncbi.datasets.v1.reports import biosample_pb2 as ncbi_dot_datasets_dot_v1_dot_reports_dot_biosample__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1fncbi/datasets/v1/datasets.proto\x12\x10ncbi.datasets.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#ncbi/datasets/options/openapi.proto\x1a#ncbi/datasets/options/request.proto\x1a&ncbi/datasets/v1/gene_descriptor.proto\x1a(ncbi/datasets/v1/reports/biosample.proto\"H\n\x14MethodPayloadRequest\x12\x16\n\x06method\x18\x01 \x01(\tR\x06method\x12\x18\n\x07payload\x18\x02 \x01(\tR\x07payload\"\x99\x0f\n AssemblyDatasetDescriptorsFilter\x12\x9d\x01\n\x0ereference_only\x18\x01 \x01(\x08\x42v\xc2\xf0\x19r\n\x05\x66\x61lse\x12\x33\n\x04true\x12+Limit to reference & representative genomes\x12\x34\n\x05\x66\x61lse\x12+Include reference and non-reference genomesR\rreferenceOnly\x12#\n\x0brefseq_only\x18\x02 \x01(\x08\x42\x02\x18\x01R\nrefseqOnly\x12\xd1\x01\n\x0f\x61ssembly_source\x18\x03 \x01(\x0e\x32\x41.ncbi.datasets.v1.AssemblyDatasetDescriptorsFilter.AssemblySourceBe\xc2\xf0\x19\x61\n\x03\x61ll\x12!\n\x06refseq\x12\x17Limit to RefSeq genomes\x12#\n\x07genbank\x12\x18Limit to GenBank genomes\x12\x12\n\x03\x61ll\x12\x0b\x41ll genomesR\x0e\x61ssemblySource\x12y\n\x0ehas_annotation\x18\x07 \x01(\x08\x42R\xc2\xf0\x19N\n\x05\x66\x61lse\x12%\n\x04true\x12\x1dLimit to annotated assemblies\x12\x1e\n\x05\x66\x61lse\x12\x15Return all assembliesR\rhasAnnotation\x12\x96\x01\n\x16\x65xclude_paired_reports\x18\t \x01(\x08\x42`\xc2\xf0\x19\\\n\x05\x66\x61lse\x12\x1e\n\x05\x66\x61lse\x12\x15Return all assemblies\x12\x33\n\x04true\x12+Only return single record for GCA/GCF pairsR\x14\x65xcludePairedReports\x12\xc7\x01\n\x10\x65xclude_atypical\x18\x0b \x01(\x08\x42\x9b\x01\xc2\xf0\x19\x96\x01\n\x05\x66\x61lse\x12\x46\n\x05\x66\x61lse\x12=Return all selected genomes, including ones that are atypical\x12\x45\n\x04true\x12=Only return genomes that have not been classified as atypicalR\x0f\x65xcludeAtypical\x12\xf5\x01\n\x10\x61ssembly_version\x18\n \x01(\x0e\x32\x42.ncbi.datasets.v1.AssemblyDatasetDescriptorsFilter.AssemblyVersionB\x85\x01\xc2\xf0\x19\x80\x01\n\x07\x63urrent\x12)\n\x07\x63urrent\x12\x1eOnly return current assemblies\x12J\n\x0e\x61ll_assemblies\x12\x38Return all assemblies, including suppressed and replacedR\x0f\x61ssemblyVersion\x12\xeb\x01\n\x0e\x61ssembly_level\x18\x04 \x03(\x0e\x32@.ncbi.datasets.v1.AssemblyDatasetDescriptorsFilter.AssemblyLevelB\x81\x01\xc2\xf0\x19}\x12=\n\nchromosome\n\x0f\x63omplete_genome\x12\x1e\x43hromosome and complete genome\x12<\n\x08scaffold\n\nchromosome\n\x0f\x63omplete_genome\x12\x13Scaffold and higherR\rassemblyLevel\x12j\n\x12\x66irst_release_date\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampB \xc2\xf0\x19\x1c\x12\x1a\n\n01/10/2015\x12\x0cJan 10, 2015R\x10\x66irstReleaseDate\x12h\n\x11last_release_date\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB \xc2\xf0\x19\x1c\x12\x1a\n\n01/10/2021\x12\x0cJan 10, 2021R\x0flastReleaseDate\x12\x89\x01\n\x0bsearch_text\x18\x08 \x03(\tBh\xc2\xf0\x19\x64\x12:\n\x1bGenome Reference Consortium\x12\x1bGenome Reference Consortium\x12\x10\n\x06GRCh38\x12\x06GRCh38\x12\x14\n\x08\x43\x35\x37\x42L/6J\x12\x08\x43\x35\x37\x42L/6JR\nsearchText\"2\n\x0e\x41ssemblySource\x12\x07\n\x03\x61ll\x10\x00\x12\n\n\x06refseq\x10\x01\x12\x0b\n\x07genbank\x10\x02\"2\n\x0f\x41ssemblyVersion\x12\x0b\n\x07\x63urrent\x10\x00\x12\x12\n\x0e\x61ll_assemblies\x10\x01\"N\n\rAssemblyLevel\x12\x0e\n\nchromosome\x10\x00\x12\x0c\n\x08scaffold\x10\x01\x12\n\n\x06\x63ontig\x10\x02\x12\x13\n\x0f\x63omplete_genome\x10\x03\"\x84\x01\n\nAccessions\x12v\n\naccessions\x18\x01 \x03(\tBV\xc2\xf0\x19R\x12\x35\n\x10GCF_000001405.40\n\x10GCF_000001635.27\x12\x0fHuman and Mouse\x12\x19\n\x10GCF_000001405.40\x12\x05HumanR\naccessions\"\xdf\x06\n\x17\x41ssemblyMetadataRequest\x12s\n\x05taxon\x18\x01 \x01(\tB]\xc2\xf0\x19Y\x12 \n\x04\x39\x36\x30\x36\x12\x18NCBI Taxonomy Identifier\x12\x14\n\x05human\x12\x0b\x43ommon Name\x12\x1f\n\x0cHomo sapiens\x12\x0fScientific NameR\x05taxon\x12<\n\naccessions\x18\x02 \x01(\x0b\x32\x1c.ncbi.datasets.v1.AccessionsR\naccessions\x12W\n\x0b\x62ioprojects\x18\x07 \x01(\x0b\x32\x35.ncbi.datasets.v1.AssemblyMetadataRequest.BioprojectsR\x0b\x62ioprojects\x12L\n\x07\x66ilters\x18\x04 \x01(\x0b\x32\x32.ncbi.datasets.v1.AssemblyDatasetDescriptorsFilterR\x07\x66ilters\x12\x33\n\x0ftax_exact_match\x18\x05 \x01(\x08\x42\x0b\xc2\xf0\x19\x07\n\x05\x66\x61lseR\rtaxExactMatch\x12`\n\x10returned_content\x18\x06 \x01(\x0e\x32\x35.ncbi.datasets.v1.AssemblyMetadataRequest.ContentTypeR\x0freturnedContent\x12\x1a\n\x05limit\x18\x03 \x01(\tB\x02\x18\x01H\x00R\x05limit\x12\'\n\tpage_size\x18\x08 \x01(\x05\x42\x08\xc2\xf0\x19\x04\n\x02\x32\x30H\x00R\x08pageSize\x12\x1d\n\npage_token\x18\t \x01(\tR\tpageToken\x1a\x82\x01\n\x0b\x42ioprojects\x12s\n\naccessions\x18\x01 \x03(\tBS\xc2\xf0\x19O\x12)\n\x0bPRJNA489243\x12\x1aVertebrate Genomes Project\x12\"\n\nPRJNA31257\x12\x14Human Genome ProjectR\naccessions\")\n\x0b\x43ontentType\x12\x0c\n\x08\x43OMPLETE\x10\x00\x12\x0c\n\x08\x41SSM_ACC\x10\x01:4\xc2\xf0\x19\x30\n.accessions:\n  accessions:\n  - GCF_000001405.40B\t\n\x07records\"\x8b\x04\n!AssemblyDatasetDescriptorsRequest\x12\x17\n\x06tax_id\x18\x01 \x01(\rH\x00R\x05taxId\x12\x1f\n\x08org_name\x18\x05 \x01(\tB\x02\x18\x01H\x00R\x07orgName\x12\x1b\n\x08tax_name\x18\x07 \x01(\tH\x00R\x07taxName\x12/\n\x12\x61ssembly_accession\x18\x04 \x01(\tH\x00R\x11\x61ssemblyAccession\x12\x1c\n\x06\x63utoff\x18\x02 \x01(\rB\x02\x18\x01H\x01R\x06\x63utoff\x12\x16\n\x05limit\x18\x08 \x01(\tH\x01R\x05limit\x12L\n\x07\x66ilters\x18\x03 \x01(\x0b\x32\x32.ncbi.datasets.v1.AssemblyDatasetDescriptorsFilterR\x07\x66ilters\x12&\n\x0ftax_exact_match\x18\x06 \x01(\x08R\rtaxExactMatch\x12j\n\x10returned_content\x18\t \x01(\x0e\x32?.ncbi.datasets.v1.AssemblyDatasetDescriptorsRequest.ContentTypeR\x0freturnedContent\"5\n\x0b\x43ontentType\x12\x0c\n\x08\x43OMPLETE\x10\x00\x12\x0c\n\x08\x41SSM_ACC\x10\x01\x12\n\n\x06\x43OUNTS\x10\x02\x42\x04\n\x02idB\t\n\x07records\"\x86\x01\n\x1a\x41ssemblyDatasetDescriptors\x12G\n\x08\x64\x61tasets\x18\x01 \x03(\x0b\x32+.ncbi.datasets.v1.AssemblyDatasetDescriptorR\x08\x64\x61tasets\x12\x1f\n\x0btotal_count\x18\x02 \x01(\rR\ntotalCount\"\x98\x01\n\nBioProject\x12\x1c\n\taccession\x18\x01 \x01(\tR\taccession\x12\x14\n\x05title\x18\x02 \x01(\tR\x05title\x12)\n\x10parent_accession\x18\x03 \x01(\tR\x0fparentAccession\x12+\n\x11parent_accessions\x18\x04 \x03(\tR\x10parentAccessions\"S\n\x11\x42ioProjectLineage\x12>\n\x0b\x62ioprojects\x18\x01 \x03(\x0b\x32\x1c.ncbi.datasets.v1.BioProjectR\x0b\x62ioprojects\"\x9a\x08\n\x19\x41ssemblyDatasetDescriptor\x12-\n\x12\x61ssembly_accession\x18\x01 \x01(\tR\x11\x61ssemblyAccession\x12:\n\x19paired_assembly_accession\x18\x11 \x01(\tR\x17pairedAssemblyAccession\x12T\n\x13\x62ioproject_lineages\x18\x0e \x03(\x0b\x32#.ncbi.datasets.v1.BioProjectLineageR\x12\x62ioprojectLineages\x12!\n\x0c\x64isplay_name\x18\x02 \x01(\tR\x0b\x64isplayName\x12,\n\x03org\x18\n \x01(\x0b\x32\x1a.ncbi.datasets.v1.OrganismR\x03org\x12X\n\x0b\x63hromosomes\x18\x04 \x03(\x0b\x32\x36.ncbi.datasets.v1.AssemblyDatasetDescriptor.ChromosomeR\x0b\x63hromosomes\x12+\n\x11\x61ssembly_category\x18\x05 \x01(\tR\x10\x61ssemblyCategory\x12X\n\x13\x61nnotation_metadata\x18\x0b \x01(\x0b\x32\'.ncbi.datasets.v1.AnnotationForAssemblyR\x12\x61nnotationMetadata\x12%\n\x0e\x61ssembly_level\x18\x07 \x01(\tR\rassemblyLevel\x12\x1c\n\tsubmitter\x18\x0f \x01(\tR\tsubmitter\x12\'\n\x0fsubmission_date\x18\x08 \x01(\tR\x0esubmissionDate\x12\x1d\n\ncontig_n50\x18\t \x01(\rR\tcontigN50\x12%\n\x0e\x65stimated_size\x18\x0c \x01(\x04R\restimatedSize\x12\x1d\n\nseq_length\x18\r \x01(\x04R\tseqLength\x12/\n\x13\x62iosample_accession\x18\x10 \x01(\tR\x12\x62iosampleAccession\x12K\n\tbiosample\x18\x14 \x01(\x0b\x32-.ncbi.datasets.v1.reports.BioSampleDescriptorR\tbiosample\x12\x1b\n\tblast_url\x18\x12 \x01(\tR\x08\x62lastUrl\x12\x19\n\x08gc_count\x18\x13 \x01(\x04R\x07gcCount\x1a\x80\x01\n\nChromosome\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n\x06length\x18\x02 \x01(\x04R\x06length\x12+\n\x11\x61\x63\x63\x65ssion_version\x18\x03 \x01(\tR\x10\x61\x63\x63\x65ssionVersion\x12\x19\n\x08gc_count\x18\x04 \x01(\x04R\x07gcCount\"\x85\x02\n\tBuscoStat\x12#\n\rbusco_lineage\x18\x01 \x01(\tR\x0c\x62uscoLineage\x12\x1b\n\tbusco_ver\x18\x02 \x01(\tR\x08\x62uscoVer\x12\x1a\n\x08\x63omplete\x18\x03 \x01(\x02R\x08\x63omplete\x12\x1f\n\x0bsingle_copy\x18\x04 \x01(\x02R\nsingleCopy\x12\x1e\n\nduplicated\x18\x05 \x01(\x02R\nduplicated\x12\x1e\n\nfragmented\x18\x06 \x01(\x02R\nfragmented\x12\x18\n\x07missing\x18\x07 \x01(\x02R\x07missing\x12\x1f\n\x0btotal_count\x18\x08 \x01(\x04R\ntotalCount\"\xf7\x04\n\x15\x41nnotationForAssembly\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n\x06source\x18\x02 \x01(\tR\x06source\x12%\n\x0erelease_number\x18\x03 \x01(\tR\rreleaseNumber\x12!\n\x0crelease_date\x18\x04 \x01(\tR\x0breleaseDate\x12\x1d\n\nreport_url\x18\x05 \x01(\tR\treportUrl\x12@\n\x04\x66ile\x18\x06 \x03(\x0b\x32,.ncbi.datasets.v1.AnnotationForAssembly.FileR\x04\x66ile\x12\x35\n\x05stats\x18\x07 \x01(\x0b\x32\x1f.ncbi.datasets.v1.FeatureCountsR\x05stats\x12\x31\n\x05\x62usco\x18\x08 \x01(\x0b\x32\x1b.ncbi.datasets.v1.BuscoStatR\x05\x62usco\x1ao\n\x04\x46ile\x12@\n\x04type\x18\x01 \x01(\x0e\x32,.ncbi.datasets.v1.AnnotationForAssembly.TypeR\x04type\x12%\n\x0e\x65stimated_size\x18\x02 \x01(\x04R\restimatedSize\"\xab\x01\n\x04Type\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x0e\n\nGENOME_GFF\x10\x01\x12\x0f\n\x0bGENOME_GBFF\x10\x02\x12\x11\n\tGENOME_GB\x10\x02\x1a\x02\x08\x01\x12\r\n\tRNA_FASTA\x10\x03\x12\x0e\n\nPROT_FASTA\x10\x04\x12\x0e\n\nGENOME_GTF\x10\x05\x12\r\n\tCDS_FASTA\x10\x06\x12\x0e\n\nASM_STRUCT\x10\x07\x12\x10\n\x0cGENOME_FASTA\x10\x08\x1a\x02\x10\x01\"N\n\rFeatureCounts\x12=\n\x0bgene_counts\x18\x01 \x01(\x0b\x32\x1c.ncbi.datasets.v1.GeneCountsR\ngeneCounts\"I\n\nGeneCounts\x12\x14\n\x05total\x18\x01 \x01(\rR\x05total\x12%\n\x0eprotein_coding\x18\x02 \x01(\rR\rproteinCoding\"\xd5\x07\n\x16\x41ssemblyDatasetRequest\x12\x33\n\x13\x61ssembly_accessions\x18\x01 \x03(\tB\x02\x18\x01R\x12\x61ssemblyAccessions\x12v\n\naccessions\x18\n \x03(\tBV\xc2\xf0\x19R\x12\x35\n\x10GCF_000001405.40\n\x10GCF_000001635.27\x12\x0fHuman and Mouse\x12\x19\n\x10GCF_000001405.40\x12\x05HumanR\naccessions\x12s\n\x0b\x63hromosomes\x18\x02 \x03(\tBQ\xc2\xf0\x19M\x12,\n\x01\x31\n\x01\x32\n\x01\x33\n\x01X\n\x01Y\n\x02MT\x12\x17Selected chromosomes #1\x12\x1d\n\x01X\n\x01Y\x12\x15Human sex chromosomesR\x0b\x63hromosomes\x12\x37\n\x12include_annotation\x18\x03 \x01(\x08\x42\x08\x18\x01\xda\xf0\x19\x02\x08\x02R\x11includeAnnotation\x12\x81\x01\n\x10\x65xclude_sequence\x18\x07 \x01(\x08\x42V\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19L\n\x05\x66\x61lse\x12 \n\x04true\x12\x18\x45xclude genomic sequence\x12!\n\x05\x66\x61lse\x12\x18Include genomic sequenceR\x0f\x65xcludeSequence\x12\xf8\x01\n\x17include_annotation_type\x18\x08 \x03(\x0e\x32,.ncbi.datasets.v1.AnnotationForAssembly.TypeB\x91\x01\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19\x86\x01\x12\x36\n\nPROT_FASTA\n\tRNA_FASTA\x12\x1dTranscript & Protein Sequence\x12L\n\nGENOME_GFF\n\x0bGENOME_GBFF\n\nGENOME_GTF\n\nPROT_FASTA\n\tRNA_FASTA\n\tCDS_FASTA\x12\x03\x41llR\x15includeAnnotationType\x12O\n\x08hydrated\x18\t \x01(\x0e\x32\x33.ncbi.datasets.v1.AssemblyDatasetRequest.ResolutionR\x08hydrated\x12\x32\n\x0binclude_tsv\x18\x0b \x01(\x08\x42\x11\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19\x07\n\x05\x66\x61lseR\nincludeTsv\"6\n\nResolution\x12\x12\n\x0e\x46ULLY_HYDRATED\x10\x00\x12\x14\n\x10\x44\x41TA_REPORT_ONLY\x10\x01:$\xc2\xf0\x19 \n\x1e\x61\x63\x63\x65ssions:\n- GCF_000001405.40\"\x8f\x01\n\x1b\x41ssemblyDatasetAvailability\x12)\n\x10valid_assemblies\x18\x01 \x03(\tR\x0fvalidAssemblies\x12-\n\x12invalid_assemblies\x18\x02 \x03(\tR\x11invalidAssemblies\x12\x16\n\x06reason\x18\x03 \x01(\tR\x06reason\")\n\x0cTaxidRequest\x12\x19\n\x08org_name\x18\x01 \x01(\tR\x07orgName\"#\n\nTaxidReply\x12\x15\n\x06tax_id\x18\x01 \x01(\rR\x05taxId\"\xac\r\n\x08Organism\x12\x15\n\x06tax_id\x18\x01 \x01(\x04R\x05taxId\x12\x19\n\x08sci_name\x18\x02 \x01(\tR\x07sciName\x12\x1f\n\x0b\x63ommon_name\x18\x03 \x01(\tR\ncommonName\x12\x1d\n\nblast_node\x18\x10 \x01(\x08R\tblastNode\x12\x14\n\x05\x62reed\x18\n \x01(\tR\x05\x62reed\x12\x1a\n\x08\x63ultivar\x18\x0b \x01(\tR\x08\x63ultivar\x12\x18\n\x07\x65\x63otype\x18\x0c \x01(\tR\x07\x65\x63otype\x12\x18\n\x07isolate\x18\r \x01(\tR\x07isolate\x12\x10\n\x03sex\x18\x0e \x01(\tR\x03sex\x12\x16\n\x06strain\x18\x0f \x01(\tR\x06strain\x12\x1f\n\x0bsearch_text\x18\x11 \x03(\tR\nsearchText\x12\x37\n\x04rank\x18\x05 \x01(\x0e\x32#.ncbi.datasets.v1.Organism.RankTypeR\x04rank\x12\"\n\rparent_tax_id\x18\x06 \x01(\x04R\x0bparentTaxId\x12)\n\x0e\x61ssembly_count\x18\x07 \x01(\x04\x42\x02\x18\x01R\rassemblyCount\x12J\n\x0f\x61ssembly_counts\x18\x13 \x01(\x0b\x32!.ncbi.datasets.v1.Organism.CountsR\x0e\x61ssemblyCounts\x12>\n\x06\x63ounts\x18\x16 \x03(\x0b\x32&.ncbi.datasets.v1.Organism.CountByTypeR\x06\x63ounts\x12\x36\n\x08\x63hildren\x18\x08 \x03(\x0b\x32\x1a.ncbi.datasets.v1.OrganismR\x08\x63hildren\x12\x32\n\x06merged\x18\t \x03(\x0b\x32\x1a.ncbi.datasets.v1.OrganismR\x06merged\x12$\n\x0emerged_tax_ids\x18\x12 \x03(\x04R\x0cmergedTaxIds\x12\x17\n\x07min_ord\x18\x14 \x01(\rR\x06minOrd\x12\x17\n\x07max_ord\x18\x15 \x01(\rR\x06maxOrd\x12\x16\n\x06weight\x18\x17 \x01(\rR\x06weight\x12\x10\n\x03key\x18\x64 \x01(\x04R\x03key\x12\x14\n\x05title\x18\x65 \x01(\tR\x05title\x12\x12\n\x04icon\x18\x66 \x01(\x08R\x04icon\x1a\x36\n\x06\x43ounts\x12\x12\n\x04node\x18\x01 \x01(\rR\x04node\x12\x18\n\x07subtree\x18\x02 \x01(\rR\x07subtree\x1ay\n\x0b\x43ountByType\x12/\n\x04type\x18\x01 \x01(\x0e\x32\x1b.ncbi.datasets.v1.CountTypeR\x04type\x12\x39\n\x06\x63ounts\x18\x02 \x01(\x0b\x32!.ncbi.datasets.v1.Organism.CountsR\x06\x63ounts\"\x9d\x05\n\x08RankType\x12\x0b\n\x07NO_RANK\x10\x00\x12\x10\n\x0cSUPERKINGDOM\x10\x01\x12\x0b\n\x07KINGDOM\x10\x02\x12\x0e\n\nSUBKINGDOM\x10\x03\x12\x0f\n\x0bSUPERPHYLUM\x10\x04\x12\r\n\tSUBPHYLUM\x10\x05\x12\n\n\x06PHYLUM\x10\x06\x12\t\n\x05\x43LADE\x10\x1f\x12\x0e\n\nSUPERCLASS\x10\x07\x12\t\n\x05\x43LASS\x10\x08\x12\x0c\n\x08SUBCLASS\x10\t\x12\x0e\n\nINFRACLASS\x10\n\x12\n\n\x06\x43OHORT\x10\x0b\x12\r\n\tSUBCOHORT\x10\x0c\x12\x0e\n\nSUPERORDER\x10\r\x12\t\n\x05ORDER\x10\x0e\x12\x0c\n\x08SUBORDER\x10\x0f\x12\x0e\n\nINFRAORDER\x10\x10\x12\r\n\tPARVORDER\x10\x11\x12\x0f\n\x0bSUPERFAMILY\x10\x12\x12\n\n\x06\x46\x41MILY\x10\x13\x12\r\n\tSUBFAMILY\x10\x14\x12\t\n\x05GENUS\x10\x15\x12\x0c\n\x08SUBGENUS\x10\x16\x12\x11\n\rSPECIES_GROUP\x10\x17\x12\x14\n\x10SPECIES_SUBGROUP\x10\x18\x12\x0b\n\x07SPECIES\x10\x19\x12\x0e\n\nSUBSPECIES\x10\x1a\x12\t\n\x05TRIBE\x10\x1b\x12\x0c\n\x08SUBTRIBE\x10\x1c\x12\t\n\x05\x46ORMA\x10\x1d\x12\x0c\n\x08VARIETAS\x10\x1e\x12\x0b\n\x06STRAIN\x10\xc0\x02\x12\x0c\n\x07SECTION\x10\xca\x02\x12\x0f\n\nSUBSECTION\x10\xd4\x02\x12\x0f\n\nPATHOGROUP\x10\xde\x02\x12\x0f\n\nSUBVARIETY\x10\xe8\x02\x12\r\n\x08GENOTYPE\x10\xf2\x02\x12\r\n\x08SEROTYPE\x10\xfc\x02\x12\x0c\n\x07ISOLATE\x10\x86\x03\x12\n\n\x05MORPH\x10\x90\x03\x12\x0b\n\x06SERIES\x10\x9a\x03\x12\x14\n\x0f\x46ORMA_SPECIALIS\x10\xa4\x03\x12\x0e\n\tSEROGROUP\x10\xae\x03\x12\x0c\n\x07\x42IOTYPE\x10\xb8\x03\"\x85\x02\n\x0eTaxTreeRequest\x12\x1b\n\x06tax_id\x18\x01 \x01(\x04\x42\x02\x18\x01H\x00R\x05taxId\x12!\n\ttax_token\x18\x02 \x01(\tB\x02\x18\x01H\x00R\x08taxToken\x12u\n\x05taxon\x18\x03 \x01(\tB]\xc2\xf0\x19Y\x12 \n\x04\x39\x36\x30\x36\x12\x18NCBI Taxonomy Identifier\x12\x14\n\x05human\x12\x0b\x43ommon Name\x12\x1f\n\x0cHomo sapiens\x12\x0fScientific NameH\x00R\x05taxon\x12\x30\n\rchildren_only\x18\x04 \x01(\x08\x42\x0b\xc2\xf0\x19\x07\n\x05\x66\x61lseR\x0c\x63hildrenOnlyB\n\n\x08taxonomy\"\xc8\x03\n\x14OrganismQueryRequest\x12+\n\x0eorganism_query\x18\x01 \x01(\tB\x02\x18\x01H\x00R\rorganismQuery\x12\x33\n\x0btaxon_query\x18\x02 \x01(\tB\x10\xc2\xf0\x19\x0c\x12\n\n\x03hum\x12\x03humH\x00R\ntaxonQuery\x12k\n\x0ftax_rank_filter\x18\x03 \x01(\x0e\x32\x34.ncbi.datasets.v1.OrganismQueryRequest.TaxRankFilterB\r\xc2\xf0\x19\t\n\x07speciesR\rtaxRankFilter\x12u\n\x13tax_resource_filter\x18\x04 \x01(\x0e\x32:.ncbi.datasets.v1.OrganismQueryRequest.TaxonResourceFilterB\t\xc2\xf0\x19\x05\n\x03\x61llR\x11taxResourceFilter\".\n\rTaxRankFilter\x12\x0b\n\x07species\x10\x00\x12\x10\n\x0chigher_taxon\x10\x01\"4\n\x13TaxonResourceFilter\x12\x07\n\x03\x61ll\x10\x00\x12\n\n\x06genome\x10\x01\x12\x08\n\x04gene\x10\x02\x42\x04\n\x02id\"\xed\x01\n\rSciNameAndIds\x12U\n\x10sci_name_and_ids\x18\x01 \x03(\x0b\x32,.ncbi.datasets.v1.SciNameAndIds.SciNameAndIdR\rsciNameAndIds\x1a\x84\x01\n\x0cSciNameAndId\x12\x19\n\x08sci_name\x18\x01 \x01(\tR\x07sciName\x12\x15\n\x06tax_id\x18\x02 \x01(\x04R\x05taxId\x12\x1f\n\x0b\x63ommon_name\x18\x03 \x01(\tR\ncommonName\x12!\n\x0cmatched_term\x18\x04 \x01(\tR\x0bmatchedTerm\"\xf2\x02\n\x0fOrthologRequest\x12\x35\n\x07gene_id\x18\x01 \x01(\rB\x1c\xc2\xf0\x19\x18\x12\x0c\n\x04\x32\x37\x37\x38\x12\x04GNAS\x12\x08\n\x01\x32\x12\x03\x41\x32MR\x06geneId\x12X\n\x10returned_content\x18\x02 \x01(\x0e\x32-.ncbi.datasets.v1.OrthologRequest.ContentTypeR\x0freturnedContent\x12\xa2\x01\n\x0ctaxon_filter\x18\x03 \x03(\tB\x7f\xc2\xf0\x19{\x12\'\n\x04\x39\x36\x30\x36\n\x05\x31\x30\x30\x39\x30\x12\x18NCBI Taxonomy Identifier\x12!\n\x05human\n\x0bhouse mouse\x12\x0b\x43ommon Name\x12-\n\x0chomo sapiens\n\x0cmus musculus\x12\x0fScientific NameR\x0btaxonFilter\")\n\x0b\x43ontentType\x12\x0c\n\x08\x43OMPLETE\x10\x00\x12\x0c\n\x08IDS_ONLY\x10\x01\"\x83\x01\n\x0bOrthologSet\x12&\n\x0fortholog_set_id\x18\x01 \x01(\rR\rorthologSetId\x12\x16\n\x06method\x18\x02 \x01(\tR\x06method\x12\x34\n\x05genes\x18\x03 \x01(\x0b\x32\x1e.ncbi.datasets.v1.GeneMetadataR\x05genes\"\xb5\n\n\x12GeneDatasetRequest\x12[\n\x08gene_ids\x18\x01 \x03(\rB@\xc2\xf0\x19<\x12\x14\n\x05\x35\x39\x30\x36\x37\x12\x0bIL21 GeneID\x12$\n\x05\x35\x39\x30\x36\x37\n\x05\x35\x30\x36\x31\x35\x12\x14IL21 & IL21R GeneIDsR\x07geneIds\x12\x81\x01\n\naccessions\x18\n \x03(\tBa\xc2\xf0\x19]\x12.\n\x0bNM_021803.4\n\x0bNM_181078.3\x12\x12RefSeq transcripts\x12+\n\x0bNP_068575.1\n\x0bNP_851564.1\x12\x0fRefSeq proteinsR\naccessions\x12`\n\x11symbols_for_taxon\x18\t \x01(\x0b\x32\x34.ncbi.datasets.v1.GeneDatasetRequest.SymbolsForTaxonR\x0fsymbolsForTaxon\x12s\n\x05taxon\x18\x03 \x01(\tB]\xc2\xf0\x19Y\x12 \n\x04\x39\x36\x30\x36\x12\x18NCBI Taxonomy Identifier\x12\x14\n\x05human\x12\x0b\x43ommon Name\x12\x1f\n\x0cHomo sapiens\x12\x0fScientific NameR\x05taxon\x12W\n\x17include_annotation_type\x18\x06 \x03(\x0e\x32\x17.ncbi.datasets.v1.FastaB\x06\xda\xf0\x19\x02\x08\x02R\x15includeAnnotationType\x12[\n\x10returned_content\x18\x07 \x01(\x0e\x32\x30.ncbi.datasets.v1.GeneDatasetRequest.ContentTypeR\x0freturnedContent\x12J\n\x0bsort_schema\x18\x08 \x01(\x0b\x32).ncbi.datasets.v1.GeneDatasetRequest.SortR\nsortSchema\x12\x14\n\x05limit\x18\x0b \x01(\tR\x05limit\x12!\n\x0c\x66\x61sta_filter\x18\x0c \x03(\tR\x0b\x66\x61staFilter\x1a\xb4\x01\n\x0fSymbolsForTaxon\x12,\n\x07symbols\x18\x01 \x03(\tB\x12\xc2\xf0\x19\x0e\x12\x0c\n\x04GNAS\x12\x04GNASR\x07symbols\x12s\n\x05taxon\x18\x02 \x01(\tB]\xc2\xf0\x19Y\x12 \n\x04\x39\x36\x30\x36\x12\x18NCBI Taxonomy Identifier\x12\x14\n\x05human\x12\x0b\x43ommon Name\x12\x1f\n\x0cHomo sapiens\x12\x0fScientific NameR\x05taxon\x1a$\n\x07GeneIds\x12\x19\n\x08gene_ids\x18\x01 \x03(\rR\x07geneIds\x1a\x8b\x01\n\x04Sort\x12\x44\n\x05\x66ield\x18\x01 \x01(\x0e\x32..ncbi.datasets.v1.GeneDatasetRequest.SortFieldR\x05\x66ield\x12=\n\tdirection\x18\x02 \x01(\x0e\x32\x1f.ncbi.datasets.v1.SortDirectionR\tdirection\")\n\x0b\x43ontentType\x12\x0c\n\x08\x43OMPLETE\x10\x00\x12\x0c\n\x08IDS_ONLY\x10\x01\"u\n\tSortField\x12\x1a\n\x16SORT_FIELD_UNSPECIFIED\x10\x00\x12\x16\n\x12SORT_FIELD_GENE_ID\x10\x01\x12\x18\n\x14SORT_FIELD_GENE_TYPE\x10\x02\x12\x1a\n\x16SORT_FIELD_GENE_SYMBOL\x10\x03:\x1f\xc2\xf0\x19\x1b\n\x19gene_ids:\n- 59067\n- 50615\"\xc4\x05\n\x05\x45rror\x12[\n\x13\x61ssembly_error_code\x18\x06 \x01(\x0e\x32).ncbi.datasets.v1.Error.AssemblyErrorCodeH\x00R\x11\x61ssemblyErrorCode\x12O\n\x0fgene_error_code\x18\x07 \x01(\x0e\x32%.ncbi.datasets.v1.Error.GeneErrorCodeH\x00R\rgeneErrorCode\x12R\n\x10virus_error_code\x18\x08 \x01(\x0e\x32&.ncbi.datasets.v1.Error.VirusErrorCodeH\x00R\x0evirusErrorCode\x12\x16\n\x06reason\x18\x05 \x01(\tR\x06reason\x12\x18\n\x07message\x18\x02 \x01(\tR\x07message\x12/\n\x11valid_identifiers\x18\x03 \x03(\tB\x02\x18\x01R\x10validIdentifiers\x12/\n\x13invalid_identifiers\x18\x04 \x03(\tR\x12invalidIdentifiers\"\xa0\x01\n\x11\x41ssemblyErrorCode\x12\x1f\n\x1bUNKNOWN_ASSEMBLY_ERROR_CODE\x10\x00\x12\x1a\n\x16INVALID_BIOPROJECT_IDS\x10\x01\x12!\n\x1dNO_ASSEMBLIES_FOR_BIOPROJECTS\x10\x02\x12\x11\n\rINVALID_TAXON\x10\x03\x12\x18\n\x14MISSING_SEARCH_FIELD\x10\x04\"J\n\rGeneErrorCode\x12\x1b\n\x17UNKNOWN_GENE_ERROR_CODE\x10\x00\x12\x1c\n\x18INCOMPLETE_LOOKUP_SYMBOL\x10\x05\".\n\x0eVirusErrorCode\x12\x1c\n\x18UNKNOWN_VIRUS_ERROR_CODE\x10\x00\x42\x06\n\x04\x63ode\"\xd7\x04\n\x07Warning\x12W\n\x11gene_warning_code\x18\x07 \x01(\x0e\x32).ncbi.datasets.v1.Warning.GeneWarningCodeH\x00R\x0fgeneWarningCode\x12\x16\n\x06reason\x18\x02 \x01(\tR\x06reason\x12\x18\n\x07message\x18\x03 \x01(\tR\x07message\x12\x45\n\x0breplaced_id\x18\x04 \x01(\x0b\x32$.ncbi.datasets.v1.Warning.ReplacedIdR\nreplacedId\x12\x37\n\x17unrecognized_identifier\x18\x05 \x01(\tR\x16unrecognizedIdentifier\x1a\x46\n\nReplacedId\x12\x1c\n\trequested\x18\x01 \x01(\tR\trequested\x12\x1a\n\x08returned\x18\x02 \x01(\tR\x08returned\"\xf0\x01\n\x0fGeneWarningCode\x12\x1d\n\x19UNKNOWN_GENE_WARNING_CODE\x10\x00\x12\x1e\n\x1a\x41\x43\x43\x45SSION_VERSION_MISMATCH\x10\x01\x12\x14\n\x10REPLACED_GENE_ID\x10\x02\x12\x18\n\x14\x44ISCONTINUED_GENE_ID\x10\x03\x12\x18\n\x14UNRECOGNIZED_GENE_ID\x10\x04\x12\x1c\n\x18UNRECOGNIZED_GENE_SYMBOL\x10\x05\x12\x1a\n\x16UNRECOGNIZED_ACCESSION\x10\x06\x12\x1a\n\x16UNRECOGNIZED_TAX_TOKEN\x10\x07\x42\x06\n\x04\x63ode\"|\n\x07Message\x12/\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x17.ncbi.datasets.v1.ErrorH\x00R\x05\x65rror\x12\x35\n\x07warning\x18\x02 \x01(\x0b\x32\x19.ncbi.datasets.v1.WarningH\x00R\x07warningB\t\n\x07message\"\xfa\x01\n\tGeneMatch\x12\x39\n\x08messages\x18\x01 \x03(\x0b\x32\x19.ncbi.datasets.v1.MessageB\x02\x18\x01R\x08messages\x12\x35\n\x08warnings\x18\x03 \x03(\x0b\x32\x19.ncbi.datasets.v1.WarningR\x08warnings\x12\x14\n\x05query\x18\x04 \x03(\tR\x05query\x12\x34\n\x04gene\x18\x02 \x01(\x0b\x32 .ncbi.datasets.v1.GeneDescriptorR\x04gene\x12/\n\x06\x65rrors\x18\x05 \x03(\x0b\x32\x17.ncbi.datasets.v1.ErrorR\x06\x65rrors\"\x99\x01\n\x0cGeneMetadata\x12\x35\n\x08messages\x18\x01 \x03(\x0b\x32\x19.ncbi.datasets.v1.MessageR\x08messages\x12\x31\n\x05genes\x18\x02 \x03(\x0b\x32\x1b.ncbi.datasets.v1.GeneMatchR\x05genes\x12\x1f\n\x0btotal_count\x18\x03 \x01(\rR\ntotalCount\"\x8f\x01\n\rAssemblyMatch\x12\x35\n\x08messages\x18\x01 \x03(\x0b\x32\x19.ncbi.datasets.v1.MessageR\x08messages\x12G\n\x08\x61ssembly\x18\x02 \x01(\x0b\x32+.ncbi.datasets.v1.AssemblyDatasetDescriptorR\x08\x61ssembly\"\xd3\x01\n\x10\x41ssemblyMetadata\x12\x35\n\x08messages\x18\x01 \x03(\x0b\x32\x19.ncbi.datasets.v1.MessageR\x08messages\x12?\n\nassemblies\x18\x02 \x03(\x0b\x32\x1f.ncbi.datasets.v1.AssemblyMatchR\nassemblies\x12\x1f\n\x0btotal_count\x18\x03 \x01(\rR\ntotalCount\x12&\n\x0fnext_page_token\x18\x04 \x01(\tR\rnextPageToken\"z\n\x0fGeneDescriptors\x12\x36\n\x05genes\x18\x01 \x03(\x0b\x32 .ncbi.datasets.v1.GeneDescriptorR\x05genes\x12/\n\x06\x65rrors\x18\x02 \x03(\x0b\x32\x17.ncbi.datasets.v1.ErrorR\x06\x65rrors\"\x88\x01\n\x12\x41nnotationForVirus\"r\n\x04Type\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\r\n\tCDS_FASTA\x10\x01\x12\x0e\n\nPROT_FASTA\x10\x02\x12\x0f\n\x0bGENOME_GBFF\x10\x03\x12\x0f\n\x0bGENOME_GPFF\x10\x04\x12\r\n\tPDB_FILES\x10\x05\x12\r\n\tBIOSAMPLE\x10\x06\"\xb7\x0c\n\x13VirusDatasetRequest\x12\x19\n\x06tax_id\x18\x01 \x01(\rB\x02\x18\x01R\x05taxId\x12\x1d\n\x08tax_name\x18\x02 \x01(\tB\x02\x18\x01R\x07taxName\x12\x1c\n\taccession\x18\x12 \x01(\tR\taccession\x12\x63\n\naccessions\x18\x10 \x03(\tBC\xc2\xf0\x19?\x12=\n\x0bNC_045512.2\x12.SARS-COV-2 isolate Wuhan-Hu-1, complete genomeR\naccessions\x12Z\n\x05taxon\x18\x13 \x01(\tBD\xc2\xf0\x19@\x12\x15\n\x07\x32\x36\x39\x37\x30\x34\x39\x12\nSARS-COV-2\x12\x16\n\x05\x31\x31\x31\x31\x38\x12\rCoronaviridae\x12\x0f\n\x07\x31\x33\x33\x35\x36\x32\x36\x12\x04MERSR\x05taxon\x12u\n\x0brefseq_only\x18\x04 \x01(\x08\x42T\xc2\xf0\x19P\n\x05\x66\x61lse\x12\x1f\n\x04true\x12\x17Limit to RefSeq genomes\x12&\n\x05\x66\x61lse\x12\x1d\x42oth GenBank & RefSeq genomesR\nrefseqOnly\x12l\n\x0e\x61nnotated_only\x18\x05 \x01(\x08\x42\x45\xc2\xf0\x19\x41\n\x05\x66\x61lse\x12\"\n\x04true\x12\x1aLimit to annotated genomes\x12\x14\n\x05\x66\x61lse\x12\x0b\x41ll genomesR\rannotatedOnly\x12\x65\n\x0ereleased_since\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\"\xc2\xf0\x19\x1e\x12\x1c\n\n2020-08-01\x12\x0e\x41ugust 1, 2020R\rreleasedSince\x12\x62\n\rupdated_since\x18\x11 \x01(\x0b\x32\x1a.google.protobuf.TimestampB!\xc2\xf0\x19\x1d\x12\x1b\n\n2021-07-18\x12\rJuly 18, 2021R\x0cupdatedSince\x12(\n\x04host\x18\x07 \x01(\tB\x14\xc2\xf0\x19\x10\x12\x0e\n\x05human\x12\x05humanR\x04host\x12\x37\n\x17pangolin_classification\x18\x14 \x01(\tR\x16pangolinClassification\x12@\n\x0cgeo_location\x18\x08 \x01(\tB\x1d\xc2\xf0\x19\x19\x12\n\n\x03USA\x12\x03USA\x12\x0b\n\x02TX\x12\x05TexasR\x0bgeoLocation\x12i\n\rcomplete_only\x18\t \x01(\x08\x42\x44\xc2\xf0\x19@\n\x05\x66\x61lse\x12!\n\x04true\x12\x19Limit to complete genomes\x12\x14\n\x05\x66\x61lse\x12\x0b\x41ll genomesR\x0c\x63ompleteOnly\x12\x98\x01\n\x0ctable_fields\x18\n \x03(\x0e\x32!.ncbi.datasets.v1.VirusTableFieldBR\xc2\xf0\x19N\x12L\n\x14nucleotide_accession\n\x11nucleotide_length\n\x10nuc_completeness\x12\x0f\x41ssembly FieldsR\x0btableFields\x12\x81\x01\n\x10\x65xclude_sequence\x18\x0c \x01(\x08\x42V\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19L\n\x05\x66\x61lse\x12 \n\x04true\x12\x18\x45xclude genomic sequence\x12!\n\x05\x66\x61lse\x12\x18Include genomic sequenceR\x0f\x65xcludeSequence\x12\xb8\x01\n\x17include_annotation_type\x18\r \x03(\x0e\x32).ncbi.datasets.v1.AnnotationForVirus.TypeBU\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19K\x12 \n\tCDS_FASTA\x12\x13Transcript sequence\x12\'\n\tCDS_FASTA\n\nPROT_FASTA\x12\x0e\x41ll annotationR\x15includeAnnotationType\x12m\n\x06\x66ormat\x18\x0e \x01(\x0e\x32\x1d.ncbi.datasets.v1.TableFormatB6\xc2\xf0\x19\x32\n\x03tsv\x12\n\n\x03tsv\x12\x03TSV\x12\n\n\x03\x63sv\x12\x03\x43SV\x12\x13\n\x05jsonl\x12\nJSON LinesR\x06\x66ormat\"\xdf\x07\n\x12VirusDatasetFilter\x12\xac\x01\n\naccessions\x18\x02 \x03(\tB\x8b\x01\xc2\xf0\x19\x86\x01\x12\x83\x01\n\x17NC_045512.2,NC_038294.1\x12hSARS-COV-2 isolate Wuhan-Hu-1 and Middle East respiratory syndrome-related coronavirus, complete genomesR\naccessions\x12Z\n\x05taxon\x18\x03 \x01(\tBD\xc2\xf0\x19@\x12\x15\n\x07\x32\x36\x39\x37\x30\x34\x39\x12\nSARS-COV-2\x12\x16\n\x05\x31\x31\x31\x31\x38\x12\rCoronaviridae\x12\x0f\n\x07\x31\x33\x33\x35\x36\x32\x36\x12\x04MERSR\x05taxon\x12u\n\x0brefseq_only\x18\x04 \x01(\x08\x42T\xc2\xf0\x19P\n\x05\x66\x61lse\x12\x1f\n\x04true\x12\x17Limit to RefSeq genomes\x12&\n\x05\x66\x61lse\x12\x1d\x42oth GenBank & RefSeq genomesR\nrefseqOnly\x12l\n\x0e\x61nnotated_only\x18\x05 \x01(\x08\x42\x45\xc2\xf0\x19\x41\n\x05\x66\x61lse\x12\"\n\x04true\x12\x1aLimit to annotated genomes\x12\x14\n\x05\x66\x61lse\x12\x0b\x41ll genomesR\rannotatedOnly\x12\x65\n\x0ereleased_since\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\"\xc2\xf0\x19\x1e\x12\x1c\n\n2020-08-01\x12\x0e\x41ugust 1, 2020R\rreleasedSince\x12\x62\n\rupdated_since\x18\x0b \x01(\x0b\x32\x1a.google.protobuf.TimestampB!\xc2\xf0\x19\x1d\x12\x1b\n\n2021-07-18\x12\rJuly 18, 2021R\x0cupdatedSince\x12(\n\x04host\x18\x07 \x01(\tB\x14\xc2\xf0\x19\x10\x12\x0e\n\x05human\x12\x05humanR\x04host\x12\x37\n\x17pangolin_classification\x18\x08 \x01(\tR\x16pangolinClassification\x12@\n\x0cgeo_location\x18\t \x01(\tB\x1d\xc2\xf0\x19\x19\x12\n\n\x03USA\x12\x03USA\x12\x0b\n\x02TX\x12\x05TexasR\x0bgeoLocation\x12i\n\rcomplete_only\x18\n \x01(\x08\x42\x44\xc2\xf0\x19@\n\x05\x66\x61lse\x12!\n\x04true\x12\x19Limit to complete genomes\x12\x14\n\x05\x66\x61lse\x12\x0b\x41ll genomesR\x0c\x63ompleteOnly\"\xe0\x03\n\x16VirusDataReportRequest\x12<\n\x06\x66ilter\x18\x01 \x01(\x0b\x32$.ncbi.datasets.v1.VirusDatasetFilterR\x06\x66ilter\x12_\n\x10returned_content\x18\x02 \x01(\x0e\x32\x34.ncbi.datasets.v1.VirusDataReportRequest.ContentTypeR\x0freturnedContent\x12\x64\n\x0ctable_fields\x18\x03 \x03(\tBA\xc2\xf0\x19=\x12;\n\taccession\n\x0bis-complete\n\x0cis-annotated\x12\x13Virus Genome FieldsR\x0btableFields\x12!\n\x0ctable_format\x18\x06 \x01(\tR\x0btableFormat\x12%\n\tpage_size\x18\x04 \x01(\x05\x42\x08\xc2\xf0\x19\x04\n\x02\x32\x30R\x08pageSize\x12\x1d\n\npage_token\x18\x05 \x01(\tR\tpageToken\"0\n\x0b\x43ontentType\x12\x0c\n\x08\x43OMPLETE\x10\x00\x12\x13\n\x0f\x41\x43\x43\x45SSIONS_ONLY\x10\x01:&\xc2\xf0\x19\"\n taxon: 2697049\nrefseq_only: true\"\xec\n\n\x1aSars2ProteinDatasetRequest\x12~\n\x08proteins\x18\x01 \x03(\tBb\xc2\xf0\x19^\x12\x1e\n\rspike protein\x12\rSpike Protein\x12<\n\rspike protein\n\x10\x65nvelope protein\n\x04RdRp\x12\x13SARS-CoV-2 proteinsR\x08proteins\x12u\n\x0brefseq_only\x18\x04 \x01(\x08\x42T\xc2\xf0\x19P\n\x05\x66\x61lse\x12\x1f\n\x04true\x12\x17Limit to RefSeq genomes\x12&\n\x05\x66\x61lse\x12\x1d\x42oth GenBank & RefSeq genomesR\nrefseqOnly\x12l\n\x0e\x61nnotated_only\x18\x05 \x01(\x08\x42\x45\xc2\xf0\x19\x41\n\x05\x66\x61lse\x12\"\n\x04true\x12\x1aLimit to annotated genomes\x12\x14\n\x05\x66\x61lse\x12\x0b\x41ll genomesR\rannotatedOnly\x12\x65\n\x0ereleased_since\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\"\xc2\xf0\x19\x1e\x12\x1c\n\n2020-08-01\x12\x0e\x41ugust 1, 2020R\rreleasedSince\x12\x62\n\rupdated_since\x18\x0f \x01(\x0b\x32\x1a.google.protobuf.TimestampB!\xc2\xf0\x19\x1d\x12\x1b\n\n2021-07-18\x12\rJuly 18, 2021R\x0cupdatedSince\x12(\n\x04host\x18\x07 \x01(\tB\x14\xc2\xf0\x19\x10\x12\x0e\n\x05human\x12\x05humanR\x04host\x12@\n\x0cgeo_location\x18\x08 \x01(\tB\x1d\xc2\xf0\x19\x19\x12\n\n\x03USA\x12\x03USA\x12\x0b\n\x02TX\x12\x05TexasR\x0bgeoLocation\x12i\n\rcomplete_only\x18\t \x01(\x08\x42\x44\xc2\xf0\x19@\n\x05\x66\x61lse\x12!\n\x04true\x12\x19Limit to complete genomes\x12\x14\n\x05\x66\x61lse\x12\x0b\x41ll genomesR\x0c\x63ompleteOnly\x12\x98\x01\n\x0ctable_fields\x18\n \x03(\x0e\x32!.ncbi.datasets.v1.VirusTableFieldBR\xc2\xf0\x19N\x12L\n\x14nucleotide_accession\n\x11nucleotide_length\n\x10nuc_completeness\x12\x0f\x41ssembly FieldsR\x0btableFields\x12\x81\x01\n\x10\x65xclude_sequence\x18\x0c \x01(\x08\x42V\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19L\n\x05\x66\x61lse\x12 \n\x04true\x12\x18\x45xclude genomic sequence\x12!\n\x05\x66\x61lse\x12\x18Include genomic sequenceR\x0f\x65xcludeSequence\x12\xb8\x01\n\x17include_annotation_type\x18\r \x03(\x0e\x32).ncbi.datasets.v1.AnnotationForVirus.TypeBU\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19K\x12 \n\tCDS_FASTA\x12\x13Transcript sequence\x12\'\n\tCDS_FASTA\n\nPROT_FASTA\x12\x0e\x41ll annotationR\x15includeAnnotationType\x12m\n\x06\x66ormat\x18\x0e \x01(\x0e\x32\x1d.ncbi.datasets.v1.TableFormatB6\xc2\xf0\x19\x32\n\x03tsv\x12\n\n\x03tsv\x12\x03TSV\x12\n\n\x03\x63sv\x12\x03\x43SV\x12\x13\n\x05jsonl\x12\nJSON LinesR\x06\x66ormat\"\xc9\x01\n\x18VirusAvailabilityRequest\x12\xac\x01\n\naccessions\x18\x01 \x03(\tB\x8b\x01\xc2\xf0\x19\x86\x01\x12\x83\x01\n\x17NC_045512.2,NC_038294.1\x12hSARS-COV-2 isolate Wuhan-Hu-1 and Middle East respiratory syndrome-related coronavirus, complete genomesR\naccessions\"\x87\x01\n\x11VirusAvailability\x12)\n\x10valid_accessions\x18\x01 \x03(\tR\x0fvalidAccessions\x12-\n\x12invalid_accessions\x18\x02 \x03(\tR\x11invalidAccessions\x12\x18\n\x07message\x18\x03 \x01(\tR\x07message\"\xc4\x0c\n\x0f\x44ownloadSummary\x12!\n\x0crecord_count\x18\x01 \x01(\rR\x0brecordCount\x12)\n\x0e\x61ssembly_count\x18\x02 \x01(\rB\x02\x18\x01R\rassemblyCount\x12J\n\x13resource_updated_on\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x11resourceUpdatedOn\x12\x46\n\x08hydrated\x18\x05 \x01(\x0b\x32*.ncbi.datasets.v1.DownloadSummary.HydratedR\x08hydrated\x12L\n\ndehydrated\x18\x06 \x01(\x0b\x32,.ncbi.datasets.v1.DownloadSummary.DehydratedR\ndehydrated\x12\x33\n\x06\x65rrors\x18\x07 \x03(\x0b\x32\x17.ncbi.datasets.v1.ErrorB\x02\x18\x01R\x06\x65rrors\x12\x35\n\x08messages\x18\x08 \x03(\x0b\x32\x19.ncbi.datasets.v1.MessageR\x08messages\x12Y\n\x0f\x61vailable_files\x18\t \x01(\x0b\x32\x30.ncbi.datasets.v1.DownloadSummary.AvailableFilesR\x0e\x61vailableFiles\x1a\x8c\x01\n\x08Hydrated\x12\x33\n\x16\x65stimated_file_size_mb\x18\x01 \x01(\rR\x13\x65stimatedFileSizeMb\x12\x10\n\x03url\x18\x02 \x01(\tR\x03url\x12\x39\n\x19\x63li_download_command_line\x18\x03 \x01(\tR\x16\x63liDownloadCommandLine\x1a\xcb\x01\n\nDehydrated\x12\x33\n\x16\x65stimated_file_size_mb\x18\x01 \x01(\rR\x13\x65stimatedFileSizeMb\x12\x10\n\x03url\x18\x02 \x01(\tR\x03url\x12\x39\n\x19\x63li_download_command_line\x18\x03 \x01(\tR\x16\x63liDownloadCommandLine\x12;\n\x1a\x63li_rehydrate_command_line\x18\x04 \x01(\tR\x17\x63liRehydrateCommandLine\x1a\x45\n\x0b\x46ileSummary\x12\x1d\n\nfile_count\x18\x01 \x01(\rR\tfileCount\x12\x17\n\x07size_mb\x18\x02 \x01(\x02R\x06sizeMb\x1a\x95\x05\n\x0e\x41vailableFiles\x12Y\n\x11\x61ll_genomic_fasta\x18\x01 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\x0f\x61llGenomicFasta\x12L\n\ngenome_gff\x18\x02 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\tgenomeGff\x12N\n\x0bgenome_gbff\x18\x03 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\ngenomeGbff\x12J\n\trna_fasta\x18\x04 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\x08rnaFasta\x12L\n\nprot_fasta\x18\x05 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\tprotFasta\x12L\n\ngenome_gtf\x18\x06 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\tgenomeGtf\x12J\n\tcds_fasta\x18\x07 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\x08\x63\x64sFasta\x12V\n\x0fsequence_report\x18\x08 \x01(\x0b\x32-.ncbi.datasets.v1.DownloadSummary.FileSummaryR\x0esequenceReport\"#\n\rTabularOutput\x12\x12\n\x04\x64\x61ta\x18\x01 \x01(\tR\x04\x64\x61ta\",\n\x12\x45lementFlankConfig\x12\x16\n\x06length\x18\x01 \x01(\rR\x06length\"\x81\x03\n\x1cRefGeneCatalogDatasetRequest\x12,\n\x11opaque_solr_query\x18\x01 \x01(\tH\x00R\x0fopaqueSolrQuery\x12U\n\x05\x66iles\x18\x02 \x03(\x0e\x32\x37.ncbi.datasets.v1.RefGeneCatalogDatasetRequest.FileTypeB\x06\xda\xf0\x19\x02\x08\x02R\x05\x66iles\x12V\n\x14\x65lement_flank_config\x18\x03 \x01(\x0b\x32$.ncbi.datasets.v1.ElementFlankConfigR\x12\x65lementFlankConfig\"{\n\x08\x46ileType\x12\x19\n\x15\x46ILE_TYPE_UNSPECIFIED\x10\x00\x12\x18\n\x14\x46ILE_TYPE_NUCLEOTIDE\x10\x01\x12#\n\x1f\x46ILE_TYPE_NUCLEOTIDE_WITH_FLANK\x10\x02\x12\x15\n\x11\x46ILE_TYPE_PROTEIN\x10\x03\x42\x07\n\x05query\"\xf4\x02\n\x18MicroBiggeDatasetRequest\x12,\n\x11opaque_solr_query\x18\x01 \x01(\tH\x00R\x0fopaqueSolrQuery\x12Q\n\x05\x66iles\x18\x02 \x03(\x0e\x32\x33.ncbi.datasets.v1.MicroBiggeDatasetRequest.FileTypeB\x06\xda\xf0\x19\x02\x08\x02R\x05\x66iles\x12V\n\x14\x65lement_flank_config\x18\x03 \x01(\x0b\x32$.ncbi.datasets.v1.ElementFlankConfigR\x12\x65lementFlankConfig\"v\n\x08\x46ileType\x12\x19\n\x15\x46ILE_TYPE_UNSPECIFIED\x10\x00\x12\x11\n\relement_fasta\x10\x01\x12\x17\n\x13\x65lement_flank_fasta\x10\x02\x12\x10\n\x0c\x63ontig_fasta\x10\x03\x12\x11\n\rprotein_fasta\x10\x04\x42\x07\n\x05query\"\x7f\n\x0cVersionReply\x12\x18\n\x07version\x18\x01 \x01(\tR\x07version\x12\x1b\n\tmajor_ver\x18\x02 \x01(\rR\x08majorVer\x12\x1b\n\tminor_ver\x18\x03 \x01(\rR\x08minorVer\x12\x1b\n\tpatch_ver\x18\x04 \x01(\rR\x08patchVer\"\x81\x05\n\x15ProkaryoteGeneRequest\x12\x93\x01\n\naccessions\x18\x01 \x03(\tBs\xc2\xf0\x19o\x12.\n\x0eWP_015878339.1\x12\x1c\x44NA-deoxyinosine glycosylase\x12=\n\x0eWP_001040085.1\x12+type II CRISPR RNA-guided endonuclease Cas9R\naccessions\x12\xf6\x01\n\x17include_annotation_type\x18\x02 \x03(\x0e\x32\x17.ncbi.datasets.v1.FastaB\xa4\x01\xda\xf0\x19\x02\x08\x02\xc2\xf0\x19\x99\x01\x12\x1e\n\nFASTA_GENE\x12\x10Gene range FASTA\x12?\n\tFASTA_RNA\n\rFASTA_PROTEIN\x12#Transcript & protein sequence FASTA\x12\x36\n\nFASTA_GENE\n\tFASTA_RNA\n\rFASTA_PROTEIN\x12\x0e\x41ll annotationR\x15includeAnnotationType\x12\x63\n\x11gene_flank_config\x18\x03 \x01(\x0b\x32\x37.ncbi.datasets.v1.ProkaryoteGeneRequest.GeneFlankConfigR\x0fgeneFlankConfig\x12\x14\n\x05taxon\x18\x04 \x01(\tR\x05taxon\x1a)\n\x0fGeneFlankConfig\x12\x16\n\x06length\x18\x01 \x01(\rR\x06length:3\xc2\xf0\x19/\n-accessions:\n- WP_000000001.1\n- WP_000000002.1\"L\n\x0cSleepRequest\x12\x1d\n\nsleep_msec\x18\x01 \x01(\x05R\tsleepMsec\x12\x1d\n\nerror_rate\x18\x02 \x01(\x02R\terrorRate\"\"\n\nSleepReply\x12\x14\n\x05reply\x18\x01 \x01(\tR\x05reply\"\xea\x04\n\x0cTaxonomyNode\x12\x15\n\x06tax_id\x18\x01 \x01(\rR\x05taxId\x12#\n\rorganism_name\x18\x02 \x01(\tR\x0corganismName\x12\x1f\n\x0b\x63ommon_name\x18\x03 \x01(\tR\ncommonName\x12\x18\n\x07lineage\x18\x04 \x03(\rR\x07lineage\x12\x1a\n\x08\x63hildren\x18\x05 \x03(\rR\x08\x63hildren\x12_\n-descendent_with_described_species_names_count\x18\x06 \x01(\rR(descendentWithDescribedSpeciesNamesCount\x12\x37\n\x04rank\x18\x07 \x01(\x0e\x32#.ncbi.datasets.v1.Organism.RankTypeR\x04rank\x12;\n\x1ahas_described_species_name\x18\x08 \x01(\x08R\x17hasDescribedSpeciesName\x12\x42\n\x06\x63ounts\x18\t \x03(\x0b\x32*.ncbi.datasets.v1.TaxonomyNode.CountByTypeR\x06\x63ounts\x12\x17\n\x07min_ord\x18\x14 \x01(\rR\x06minOrd\x12\x17\n\x07max_ord\x18\x15 \x01(\rR\x06maxOrd\x12$\n\x0e_indexed_names\x18\x65 \x03(\tR\x0cIndexedNames\x1aT\n\x0b\x43ountByType\x12/\n\x04type\x18\x01 \x01(\x0e\x32\x1b.ncbi.datasets.v1.CountTypeR\x04type\x12\x14\n\x05\x63ount\x18\x02 \x01(\rR\x05\x63ount\"\xd6\x02\n\x17TaxonomyMetadataRequest\x12\x91\x01\n\x06taxons\x18\x01 \x03(\tBy\xc2\xf0\x19u\x12\'\n\x04\x39\x36\x30\x36\n\x05\x31\x30\x30\x39\x30\x12\x18NCBI Taxonomy Identifier\x12\x1b\n\x05human\n\x05mouse\x12\x0b\x43ommon Name\x12-\n\x0cHomo sapiens\n\x0cMus musculus\x12\x0fScientific NameR\x06taxons\x12`\n\x10returned_content\x18\x02 \x01(\x0e\x32\x35.ncbi.datasets.v1.TaxonomyMetadataRequest.ContentTypeR\x0freturnedContent\"\'\n\x0b\x43ontentType\x12\x0c\n\x08\x43OMPLETE\x10\x00\x12\n\n\x06TAXIDS\x10\x01:\x1c\xc2\xf0\x19\x18\n\x16taxons:\n- 9606\n- mouse\"\xc9\x01\n\rTaxonomyMatch\x12\x35\n\x08warnings\x18\x01 \x03(\x0b\x32\x19.ncbi.datasets.v1.WarningR\x08warnings\x12/\n\x06\x65rrors\x18\x02 \x03(\x0b\x32\x17.ncbi.datasets.v1.ErrorR\x06\x65rrors\x12\x14\n\x05query\x18\x03 \x03(\tR\x05query\x12:\n\x08taxonomy\x18\x04 \x01(\x0b\x32\x1e.ncbi.datasets.v1.TaxonomyNodeR\x08taxonomy\"\x99\x01\n\x18TaxonomyMetadataResponse\x12\x35\n\x08messages\x18\x01 \x03(\x0b\x32\x19.ncbi.datasets.v1.MessageR\x08messages\x12\x46\n\x0etaxonomy_nodes\x18\x02 \x03(\x0b\x32\x1f.ncbi.datasets.v1.TaxonomyMatchR\rtaxonomyNodes\"\xa3\x02\n\x1eTaxonomyFilteredSubtreeRequest\x12\x91\x01\n\x06taxons\x18\x01 \x03(\tBy\xc2\xf0\x19u\x12\'\n\x04\x39\x36\x30\x36\n\x05\x31\x30\x30\x39\x30\x12\x18NCBI Taxonomy Identifier\x12\x1b\n\x05human\n\x05mouse\x12\x0b\x43ommon Name\x12-\n\x0cHomo sapiens\n\x0cMus musculus\x12\x0fScientific NameR\x06taxons\x12\'\n\x0fspecified_limit\x18\x02 \x01(\x08R\x0especifiedLimit\x12\x44\n\x0brank_limits\x18\x03 \x03(\x0e\x32#.ncbi.datasets.v1.Organism.RankTypeR\nrankLimits\"\xdf\x04\n\x1fTaxonomyFilteredSubtreeResponse\x12\x1d\n\nroot_nodes\x18\x01 \x03(\rR\trootNodes\x12R\n\x05\x65\x64ges\x18\x02 \x03(\x0b\x32<.ncbi.datasets.v1.TaxonomyFilteredSubtreeResponse.EdgesEntryR\x05\x65\x64ges\x12\x35\n\x08warnings\x18\x03 \x03(\x0b\x32\x19.ncbi.datasets.v1.WarningR\x08warnings\x12/\n\x06\x65rrors\x18\x04 \x03(\x0b\x32\x17.ncbi.datasets.v1.ErrorR\x06\x65rrors\x1a\xee\x01\n\x04\x45\x64ge\x12)\n\x10visible_children\x18\x01 \x03(\rR\x0fvisibleChildren\x12k\n\x0f\x63hildren_status\x18\x02 \x01(\x0e\x32\x42.ncbi.datasets.v1.TaxonomyFilteredSubtreeResponse.Edge.ChildStatusR\x0e\x63hildrenStatus\"N\n\x0b\x43hildStatus\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\x15\n\x11HAS_MORE_CHILDREN\x10\x01\x12\x17\n\x13NO_VISIBLE_CHILDREN\x10\x02\x1ap\n\nEdgesEntry\x12\x10\n\x03key\x18\x01 \x01(\rR\x03key\x12L\n\x05value\x18\x02 \x01(\x0b\x32\x36.ncbi.datasets.v1.TaxonomyFilteredSubtreeResponse.EdgeR\x05value:\x02\x38\x01\"\xe9\x01\n\x0e\x44\x61tasetRequest\x12G\n\tgenome_v1\x18\x01 \x01(\x0b\x32(.ncbi.datasets.v1.AssemblyDatasetRequestH\x00R\x08genomeV1\x12?\n\x07gene_v1\x18\x02 \x01(\x0b\x32$.ncbi.datasets.v1.GeneDatasetRequestH\x00R\x06geneV1\x12\x42\n\x08virus_v1\x18\x03 \x01(\x0b\x32%.ncbi.datasets.v1.VirusDatasetRequestH\x00R\x07virusV1B\t\n\x07request*\xf9\x02\n\tCountType\x12\x1a\n\x16\x43OUNT_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13\x43OUNT_TYPE_ASSEMBLY\x10\x01\x12\x13\n\x0f\x43OUNT_TYPE_GENE\x10\x02\x12\x13\n\x0f\x43OUNT_TYPE_tRNA\x10\x03\x12\x13\n\x0f\x43OUNT_TYPE_rRNA\x10\x04\x12\x14\n\x10\x43OUNT_TYPE_snRNA\x10\x05\x12\x14\n\x10\x43OUNT_TYPE_scRNA\x10\x06\x12\x15\n\x11\x43OUNT_TYPE_snoRNA\x10\x07\x12\x1d\n\x19\x43OUNT_TYPE_PROTEIN_CODING\x10\x08\x12\x15\n\x11\x43OUNT_TYPE_PSEUDO\x10\t\x12\x19\n\x15\x43OUNT_TYPE_TRANSPOSON\x10\n\x12\x16\n\x12\x43OUNT_TYPE_miscRNA\x10\x0b\x12\x14\n\x10\x43OUNT_TYPE_ncRNA\x10\x0c\x12 \n\x1c\x43OUNT_TYPE_BIOLOGICAL_REGION\x10\r\x12\x14\n\x10\x43OUNT_TYPE_OTHER\x10\x0e*l\n\rSortDirection\x12\x1e\n\x1aSORT_DIRECTION_UNSPECIFIED\x10\x00\x12\x1c\n\x18SORT_DIRECTION_ASCENDING\x10\x01\x12\x1d\n\x19SORT_DIRECTION_DESCENDING\x10\x02*\x99\x01\n\x05\x46\x61sta\x12\x15\n\x11\x46\x41STA_UNSPECIFIED\x10\x00\x12\x0e\n\nFASTA_GENE\x10\x01\x12\r\n\tFASTA_RNA\x10\x02\x12\x11\n\rFASTA_PROTEIN\x10\x03\x12\x14\n\x10\x46\x41STA_GENE_FLANK\x10\x04\x12\r\n\tFASTA_CDS\x10\x05\x12\x10\n\x0c\x46\x41STA_5P_UTR\x10\x06\x12\x10\n\x0c\x46\x41STA_3P_UTR\x10\x07*\xa1\x03\n\x0fVirusTableField\x12\x0f\n\x0bunspecified\x10\x00\x12\x18\n\x14nucleotide_accession\x10\x01\x12\x12\n\x0especies_tax_id\x10\x02\x12\x10\n\x0cspecies_name\x10\x03\x12\t\n\x05genus\x10\x04\x12\n\n\x06\x66\x61mily\x10\x05\x12\x15\n\x11nucleotide_length\x10\x07\x12\x10\n\x0cisolate_name\x10\x08\x12\x11\n\rsequence_type\x10\t\x12\x14\n\x10nuc_completeness\x10\n\x12\x10\n\x0cgeo_location\x10\x0b\x12\x0c\n\x08us_state\x10\x0c\x12\r\n\thost_name\x10\r\x12\x0f\n\x0bhost_tax_id\x10\x0e\x12\x13\n\x0f\x63ollection_date\x10\x0f\x12\x0e\n\nbioproject\x10\x10\x12\r\n\tbiosample\x10\x11\x12\x14\n\x10polyprotein_name\x10\x13\x12\x10\n\x0cprotein_name\x10\x14\x12\x15\n\x11protein_accession\x10\x15\x12\x13\n\x0fprotein_synonym\x10\x16\x12\x0c\n\x08\x63\x64s_span\x10\x17**\n\x0bTableFormat\x12\x07\n\x03tsv\x10\x00\x12\x07\n\x03\x63sv\x10\x01\x12\t\n\x05jsonl\x10\x02\x42\x15Z\x10ncbi/datasets/v1\xf8\x01\x01\x62\x06proto3')

_COUNTTYPE = DESCRIPTOR.enum_types_by_name['CountType']
CountType = enum_type_wrapper.EnumTypeWrapper(_COUNTTYPE)
_SORTDIRECTION = DESCRIPTOR.enum_types_by_name['SortDirection']
SortDirection = enum_type_wrapper.EnumTypeWrapper(_SORTDIRECTION)
_FASTA = DESCRIPTOR.enum_types_by_name['Fasta']
Fasta = enum_type_wrapper.EnumTypeWrapper(_FASTA)
_VIRUSTABLEFIELD = DESCRIPTOR.enum_types_by_name['VirusTableField']
VirusTableField = enum_type_wrapper.EnumTypeWrapper(_VIRUSTABLEFIELD)
_TABLEFORMAT = DESCRIPTOR.enum_types_by_name['TableFormat']
TableFormat = enum_type_wrapper.EnumTypeWrapper(_TABLEFORMAT)
COUNT_TYPE_UNSPECIFIED = 0
COUNT_TYPE_ASSEMBLY = 1
COUNT_TYPE_GENE = 2
COUNT_TYPE_tRNA = 3
COUNT_TYPE_rRNA = 4
COUNT_TYPE_snRNA = 5
COUNT_TYPE_scRNA = 6
COUNT_TYPE_snoRNA = 7
COUNT_TYPE_PROTEIN_CODING = 8
COUNT_TYPE_PSEUDO = 9
COUNT_TYPE_TRANSPOSON = 10
COUNT_TYPE_miscRNA = 11
COUNT_TYPE_ncRNA = 12
COUNT_TYPE_BIOLOGICAL_REGION = 13
COUNT_TYPE_OTHER = 14
SORT_DIRECTION_UNSPECIFIED = 0
SORT_DIRECTION_ASCENDING = 1
SORT_DIRECTION_DESCENDING = 2
FASTA_UNSPECIFIED = 0
FASTA_GENE = 1
FASTA_RNA = 2
FASTA_PROTEIN = 3
FASTA_GENE_FLANK = 4
FASTA_CDS = 5
FASTA_5P_UTR = 6
FASTA_3P_UTR = 7
unspecified = 0
nucleotide_accession = 1
species_tax_id = 2
species_name = 3
genus = 4
family = 5
nucleotide_length = 7
isolate_name = 8
sequence_type = 9
nuc_completeness = 10
geo_location = 11
us_state = 12
host_name = 13
host_tax_id = 14
collection_date = 15
bioproject = 16
biosample = 17
polyprotein_name = 19
protein_name = 20
protein_accession = 21
protein_synonym = 22
cds_span = 23
tsv = 0
csv = 1
jsonl = 2


_METHODPAYLOADREQUEST = DESCRIPTOR.message_types_by_name['MethodPayloadRequest']
_ASSEMBLYDATASETDESCRIPTORSFILTER = DESCRIPTOR.message_types_by_name['AssemblyDatasetDescriptorsFilter']
_ACCESSIONS = DESCRIPTOR.message_types_by_name['Accessions']
_ASSEMBLYMETADATAREQUEST = DESCRIPTOR.message_types_by_name['AssemblyMetadataRequest']
_ASSEMBLYMETADATAREQUEST_BIOPROJECTS = _ASSEMBLYMETADATAREQUEST.nested_types_by_name['Bioprojects']
_ASSEMBLYDATASETDESCRIPTORSREQUEST = DESCRIPTOR.message_types_by_name['AssemblyDatasetDescriptorsRequest']
_ASSEMBLYDATASETDESCRIPTORS = DESCRIPTOR.message_types_by_name['AssemblyDatasetDescriptors']
_BIOPROJECT = DESCRIPTOR.message_types_by_name['BioProject']
_BIOPROJECTLINEAGE = DESCRIPTOR.message_types_by_name['BioProjectLineage']
_ASSEMBLYDATASETDESCRIPTOR = DESCRIPTOR.message_types_by_name['AssemblyDatasetDescriptor']
_ASSEMBLYDATASETDESCRIPTOR_CHROMOSOME = _ASSEMBLYDATASETDESCRIPTOR.nested_types_by_name['Chromosome']
_BUSCOSTAT = DESCRIPTOR.message_types_by_name['BuscoStat']
_ANNOTATIONFORASSEMBLY = DESCRIPTOR.message_types_by_name['AnnotationForAssembly']
_ANNOTATIONFORASSEMBLY_FILE = _ANNOTATIONFORASSEMBLY.nested_types_by_name['File']
_FEATURECOUNTS = DESCRIPTOR.message_types_by_name['FeatureCounts']
_GENECOUNTS = DESCRIPTOR.message_types_by_name['GeneCounts']
_ASSEMBLYDATASETREQUEST = DESCRIPTOR.message_types_by_name['AssemblyDatasetRequest']
_ASSEMBLYDATASETAVAILABILITY = DESCRIPTOR.message_types_by_name['AssemblyDatasetAvailability']
_TAXIDREQUEST = DESCRIPTOR.message_types_by_name['TaxidRequest']
_TAXIDREPLY = DESCRIPTOR.message_types_by_name['TaxidReply']
_ORGANISM = DESCRIPTOR.message_types_by_name['Organism']
_ORGANISM_COUNTS = _ORGANISM.nested_types_by_name['Counts']
_ORGANISM_COUNTBYTYPE = _ORGANISM.nested_types_by_name['CountByType']
_TAXTREEREQUEST = DESCRIPTOR.message_types_by_name['TaxTreeRequest']
_ORGANISMQUERYREQUEST = DESCRIPTOR.message_types_by_name['OrganismQueryRequest']
_SCINAMEANDIDS = DESCRIPTOR.message_types_by_name['SciNameAndIds']
_SCINAMEANDIDS_SCINAMEANDID = _SCINAMEANDIDS.nested_types_by_name['SciNameAndId']
_ORTHOLOGREQUEST = DESCRIPTOR.message_types_by_name['OrthologRequest']
_ORTHOLOGSET = DESCRIPTOR.message_types_by_name['OrthologSet']
_GENEDATASETREQUEST = DESCRIPTOR.message_types_by_name['GeneDatasetRequest']
_GENEDATASETREQUEST_SYMBOLSFORTAXON = _GENEDATASETREQUEST.nested_types_by_name['SymbolsForTaxon']
_GENEDATASETREQUEST_GENEIDS = _GENEDATASETREQUEST.nested_types_by_name['GeneIds']
_GENEDATASETREQUEST_SORT = _GENEDATASETREQUEST.nested_types_by_name['Sort']
_ERROR = DESCRIPTOR.message_types_by_name['Error']
_WARNING = DESCRIPTOR.message_types_by_name['Warning']
_WARNING_REPLACEDID = _WARNING.nested_types_by_name['ReplacedId']
_MESSAGE = DESCRIPTOR.message_types_by_name['Message']
_GENEMATCH = DESCRIPTOR.message_types_by_name['GeneMatch']
_GENEMETADATA = DESCRIPTOR.message_types_by_name['GeneMetadata']
_ASSEMBLYMATCH = DESCRIPTOR.message_types_by_name['AssemblyMatch']
_ASSEMBLYMETADATA = DESCRIPTOR.message_types_by_name['AssemblyMetadata']
_GENEDESCRIPTORS = DESCRIPTOR.message_types_by_name['GeneDescriptors']
_ANNOTATIONFORVIRUS = DESCRIPTOR.message_types_by_name['AnnotationForVirus']
_VIRUSDATASETREQUEST = DESCRIPTOR.message_types_by_name['VirusDatasetRequest']
_VIRUSDATASETFILTER = DESCRIPTOR.message_types_by_name['VirusDatasetFilter']
_VIRUSDATAREPORTREQUEST = DESCRIPTOR.message_types_by_name['VirusDataReportRequest']
_SARS2PROTEINDATASETREQUEST = DESCRIPTOR.message_types_by_name['Sars2ProteinDatasetRequest']
_VIRUSAVAILABILITYREQUEST = DESCRIPTOR.message_types_by_name['VirusAvailabilityRequest']
_VIRUSAVAILABILITY = DESCRIPTOR.message_types_by_name['VirusAvailability']
_DOWNLOADSUMMARY = DESCRIPTOR.message_types_by_name['DownloadSummary']
_DOWNLOADSUMMARY_HYDRATED = _DOWNLOADSUMMARY.nested_types_by_name['Hydrated']
_DOWNLOADSUMMARY_DEHYDRATED = _DOWNLOADSUMMARY.nested_types_by_name['Dehydrated']
_DOWNLOADSUMMARY_FILESUMMARY = _DOWNLOADSUMMARY.nested_types_by_name['FileSummary']
_DOWNLOADSUMMARY_AVAILABLEFILES = _DOWNLOADSUMMARY.nested_types_by_name['AvailableFiles']
_TABULAROUTPUT = DESCRIPTOR.message_types_by_name['TabularOutput']
_ELEMENTFLANKCONFIG = DESCRIPTOR.message_types_by_name['ElementFlankConfig']
_REFGENECATALOGDATASETREQUEST = DESCRIPTOR.message_types_by_name['RefGeneCatalogDatasetRequest']
_MICROBIGGEDATASETREQUEST = DESCRIPTOR.message_types_by_name['MicroBiggeDatasetRequest']
_VERSIONREPLY = DESCRIPTOR.message_types_by_name['VersionReply']
_PROKARYOTEGENEREQUEST = DESCRIPTOR.message_types_by_name['ProkaryoteGeneRequest']
_PROKARYOTEGENEREQUEST_GENEFLANKCONFIG = _PROKARYOTEGENEREQUEST.nested_types_by_name['GeneFlankConfig']
_SLEEPREQUEST = DESCRIPTOR.message_types_by_name['SleepRequest']
_SLEEPREPLY = DESCRIPTOR.message_types_by_name['SleepReply']
_TAXONOMYNODE = DESCRIPTOR.message_types_by_name['TaxonomyNode']
_TAXONOMYNODE_COUNTBYTYPE = _TAXONOMYNODE.nested_types_by_name['CountByType']
_TAXONOMYMETADATAREQUEST = DESCRIPTOR.message_types_by_name['TaxonomyMetadataRequest']
_TAXONOMYMATCH = DESCRIPTOR.message_types_by_name['TaxonomyMatch']
_TAXONOMYMETADATARESPONSE = DESCRIPTOR.message_types_by_name['TaxonomyMetadataResponse']
_TAXONOMYFILTEREDSUBTREEREQUEST = DESCRIPTOR.message_types_by_name['TaxonomyFilteredSubtreeRequest']
_TAXONOMYFILTEREDSUBTREERESPONSE = DESCRIPTOR.message_types_by_name['TaxonomyFilteredSubtreeResponse']
_TAXONOMYFILTEREDSUBTREERESPONSE_EDGE = _TAXONOMYFILTEREDSUBTREERESPONSE.nested_types_by_name['Edge']
_TAXONOMYFILTEREDSUBTREERESPONSE_EDGESENTRY = _TAXONOMYFILTEREDSUBTREERESPONSE.nested_types_by_name['EdgesEntry']
_DATASETREQUEST = DESCRIPTOR.message_types_by_name['DatasetRequest']
_ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYSOURCE = _ASSEMBLYDATASETDESCRIPTORSFILTER.enum_types_by_name['AssemblySource']
_ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYVERSION = _ASSEMBLYDATASETDESCRIPTORSFILTER.enum_types_by_name['AssemblyVersion']
_ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYLEVEL = _ASSEMBLYDATASETDESCRIPTORSFILTER.enum_types_by_name['AssemblyLevel']
_ASSEMBLYMETADATAREQUEST_CONTENTTYPE = _ASSEMBLYMETADATAREQUEST.enum_types_by_name['ContentType']
_ASSEMBLYDATASETDESCRIPTORSREQUEST_CONTENTTYPE = _ASSEMBLYDATASETDESCRIPTORSREQUEST.enum_types_by_name['ContentType']
_ANNOTATIONFORASSEMBLY_TYPE = _ANNOTATIONFORASSEMBLY.enum_types_by_name['Type']
_ASSEMBLYDATASETREQUEST_RESOLUTION = _ASSEMBLYDATASETREQUEST.enum_types_by_name['Resolution']
_ORGANISM_RANKTYPE = _ORGANISM.enum_types_by_name['RankType']
_ORGANISMQUERYREQUEST_TAXRANKFILTER = _ORGANISMQUERYREQUEST.enum_types_by_name['TaxRankFilter']
_ORGANISMQUERYREQUEST_TAXONRESOURCEFILTER = _ORGANISMQUERYREQUEST.enum_types_by_name['TaxonResourceFilter']
_ORTHOLOGREQUEST_CONTENTTYPE = _ORTHOLOGREQUEST.enum_types_by_name['ContentType']
_GENEDATASETREQUEST_CONTENTTYPE = _GENEDATASETREQUEST.enum_types_by_name['ContentType']
_GENEDATASETREQUEST_SORTFIELD = _GENEDATASETREQUEST.enum_types_by_name['SortField']
_ERROR_ASSEMBLYERRORCODE = _ERROR.enum_types_by_name['AssemblyErrorCode']
_ERROR_GENEERRORCODE = _ERROR.enum_types_by_name['GeneErrorCode']
_ERROR_VIRUSERRORCODE = _ERROR.enum_types_by_name['VirusErrorCode']
_WARNING_GENEWARNINGCODE = _WARNING.enum_types_by_name['GeneWarningCode']
_ANNOTATIONFORVIRUS_TYPE = _ANNOTATIONFORVIRUS.enum_types_by_name['Type']
_VIRUSDATAREPORTREQUEST_CONTENTTYPE = _VIRUSDATAREPORTREQUEST.enum_types_by_name['ContentType']
_REFGENECATALOGDATASETREQUEST_FILETYPE = _REFGENECATALOGDATASETREQUEST.enum_types_by_name['FileType']
_MICROBIGGEDATASETREQUEST_FILETYPE = _MICROBIGGEDATASETREQUEST.enum_types_by_name['FileType']
_TAXONOMYMETADATAREQUEST_CONTENTTYPE = _TAXONOMYMETADATAREQUEST.enum_types_by_name['ContentType']
_TAXONOMYFILTEREDSUBTREERESPONSE_EDGE_CHILDSTATUS = _TAXONOMYFILTEREDSUBTREERESPONSE_EDGE.enum_types_by_name['ChildStatus']
MethodPayloadRequest = _reflection.GeneratedProtocolMessageType('MethodPayloadRequest', (_message.Message,), {
  'DESCRIPTOR' : _METHODPAYLOADREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.MethodPayloadRequest)
  })
_sym_db.RegisterMessage(MethodPayloadRequest)

AssemblyDatasetDescriptorsFilter = _reflection.GeneratedProtocolMessageType('AssemblyDatasetDescriptorsFilter', (_message.Message,), {
  'DESCRIPTOR' : _ASSEMBLYDATASETDESCRIPTORSFILTER,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyDatasetDescriptorsFilter)
  })
_sym_db.RegisterMessage(AssemblyDatasetDescriptorsFilter)

Accessions = _reflection.GeneratedProtocolMessageType('Accessions', (_message.Message,), {
  'DESCRIPTOR' : _ACCESSIONS,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Accessions)
  })
_sym_db.RegisterMessage(Accessions)

AssemblyMetadataRequest = _reflection.GeneratedProtocolMessageType('AssemblyMetadataRequest', (_message.Message,), {

  'Bioprojects' : _reflection.GeneratedProtocolMessageType('Bioprojects', (_message.Message,), {
    'DESCRIPTOR' : _ASSEMBLYMETADATAREQUEST_BIOPROJECTS,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyMetadataRequest.Bioprojects)
    })
  ,
  'DESCRIPTOR' : _ASSEMBLYMETADATAREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyMetadataRequest)
  })
_sym_db.RegisterMessage(AssemblyMetadataRequest)
_sym_db.RegisterMessage(AssemblyMetadataRequest.Bioprojects)

AssemblyDatasetDescriptorsRequest = _reflection.GeneratedProtocolMessageType('AssemblyDatasetDescriptorsRequest', (_message.Message,), {
  'DESCRIPTOR' : _ASSEMBLYDATASETDESCRIPTORSREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyDatasetDescriptorsRequest)
  })
_sym_db.RegisterMessage(AssemblyDatasetDescriptorsRequest)

AssemblyDatasetDescriptors = _reflection.GeneratedProtocolMessageType('AssemblyDatasetDescriptors', (_message.Message,), {
  'DESCRIPTOR' : _ASSEMBLYDATASETDESCRIPTORS,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyDatasetDescriptors)
  })
_sym_db.RegisterMessage(AssemblyDatasetDescriptors)

BioProject = _reflection.GeneratedProtocolMessageType('BioProject', (_message.Message,), {
  'DESCRIPTOR' : _BIOPROJECT,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.BioProject)
  })
_sym_db.RegisterMessage(BioProject)

BioProjectLineage = _reflection.GeneratedProtocolMessageType('BioProjectLineage', (_message.Message,), {
  'DESCRIPTOR' : _BIOPROJECTLINEAGE,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.BioProjectLineage)
  })
_sym_db.RegisterMessage(BioProjectLineage)

AssemblyDatasetDescriptor = _reflection.GeneratedProtocolMessageType('AssemblyDatasetDescriptor', (_message.Message,), {

  'Chromosome' : _reflection.GeneratedProtocolMessageType('Chromosome', (_message.Message,), {
    'DESCRIPTOR' : _ASSEMBLYDATASETDESCRIPTOR_CHROMOSOME,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyDatasetDescriptor.Chromosome)
    })
  ,
  'DESCRIPTOR' : _ASSEMBLYDATASETDESCRIPTOR,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyDatasetDescriptor)
  })
_sym_db.RegisterMessage(AssemblyDatasetDescriptor)
_sym_db.RegisterMessage(AssemblyDatasetDescriptor.Chromosome)

BuscoStat = _reflection.GeneratedProtocolMessageType('BuscoStat', (_message.Message,), {
  'DESCRIPTOR' : _BUSCOSTAT,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.BuscoStat)
  })
_sym_db.RegisterMessage(BuscoStat)

AnnotationForAssembly = _reflection.GeneratedProtocolMessageType('AnnotationForAssembly', (_message.Message,), {

  'File' : _reflection.GeneratedProtocolMessageType('File', (_message.Message,), {
    'DESCRIPTOR' : _ANNOTATIONFORASSEMBLY_FILE,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AnnotationForAssembly.File)
    })
  ,
  'DESCRIPTOR' : _ANNOTATIONFORASSEMBLY,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AnnotationForAssembly)
  })
_sym_db.RegisterMessage(AnnotationForAssembly)
_sym_db.RegisterMessage(AnnotationForAssembly.File)

FeatureCounts = _reflection.GeneratedProtocolMessageType('FeatureCounts', (_message.Message,), {
  'DESCRIPTOR' : _FEATURECOUNTS,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.FeatureCounts)
  })
_sym_db.RegisterMessage(FeatureCounts)

GeneCounts = _reflection.GeneratedProtocolMessageType('GeneCounts', (_message.Message,), {
  'DESCRIPTOR' : _GENECOUNTS,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneCounts)
  })
_sym_db.RegisterMessage(GeneCounts)

AssemblyDatasetRequest = _reflection.GeneratedProtocolMessageType('AssemblyDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _ASSEMBLYDATASETREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyDatasetRequest)
  })
_sym_db.RegisterMessage(AssemblyDatasetRequest)

AssemblyDatasetAvailability = _reflection.GeneratedProtocolMessageType('AssemblyDatasetAvailability', (_message.Message,), {
  'DESCRIPTOR' : _ASSEMBLYDATASETAVAILABILITY,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyDatasetAvailability)
  })
_sym_db.RegisterMessage(AssemblyDatasetAvailability)

TaxidRequest = _reflection.GeneratedProtocolMessageType('TaxidRequest', (_message.Message,), {
  'DESCRIPTOR' : _TAXIDREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxidRequest)
  })
_sym_db.RegisterMessage(TaxidRequest)

TaxidReply = _reflection.GeneratedProtocolMessageType('TaxidReply', (_message.Message,), {
  'DESCRIPTOR' : _TAXIDREPLY,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxidReply)
  })
_sym_db.RegisterMessage(TaxidReply)

Organism = _reflection.GeneratedProtocolMessageType('Organism', (_message.Message,), {

  'Counts' : _reflection.GeneratedProtocolMessageType('Counts', (_message.Message,), {
    'DESCRIPTOR' : _ORGANISM_COUNTS,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Organism.Counts)
    })
  ,

  'CountByType' : _reflection.GeneratedProtocolMessageType('CountByType', (_message.Message,), {
    'DESCRIPTOR' : _ORGANISM_COUNTBYTYPE,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Organism.CountByType)
    })
  ,
  'DESCRIPTOR' : _ORGANISM,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Organism)
  })
_sym_db.RegisterMessage(Organism)
_sym_db.RegisterMessage(Organism.Counts)
_sym_db.RegisterMessage(Organism.CountByType)

TaxTreeRequest = _reflection.GeneratedProtocolMessageType('TaxTreeRequest', (_message.Message,), {
  'DESCRIPTOR' : _TAXTREEREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxTreeRequest)
  })
_sym_db.RegisterMessage(TaxTreeRequest)

OrganismQueryRequest = _reflection.GeneratedProtocolMessageType('OrganismQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _ORGANISMQUERYREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.OrganismQueryRequest)
  })
_sym_db.RegisterMessage(OrganismQueryRequest)

SciNameAndIds = _reflection.GeneratedProtocolMessageType('SciNameAndIds', (_message.Message,), {

  'SciNameAndId' : _reflection.GeneratedProtocolMessageType('SciNameAndId', (_message.Message,), {
    'DESCRIPTOR' : _SCINAMEANDIDS_SCINAMEANDID,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.SciNameAndIds.SciNameAndId)
    })
  ,
  'DESCRIPTOR' : _SCINAMEANDIDS,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.SciNameAndIds)
  })
_sym_db.RegisterMessage(SciNameAndIds)
_sym_db.RegisterMessage(SciNameAndIds.SciNameAndId)

OrthologRequest = _reflection.GeneratedProtocolMessageType('OrthologRequest', (_message.Message,), {
  'DESCRIPTOR' : _ORTHOLOGREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.OrthologRequest)
  })
_sym_db.RegisterMessage(OrthologRequest)

OrthologSet = _reflection.GeneratedProtocolMessageType('OrthologSet', (_message.Message,), {
  'DESCRIPTOR' : _ORTHOLOGSET,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.OrthologSet)
  })
_sym_db.RegisterMessage(OrthologSet)

GeneDatasetRequest = _reflection.GeneratedProtocolMessageType('GeneDatasetRequest', (_message.Message,), {

  'SymbolsForTaxon' : _reflection.GeneratedProtocolMessageType('SymbolsForTaxon', (_message.Message,), {
    'DESCRIPTOR' : _GENEDATASETREQUEST_SYMBOLSFORTAXON,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneDatasetRequest.SymbolsForTaxon)
    })
  ,

  'GeneIds' : _reflection.GeneratedProtocolMessageType('GeneIds', (_message.Message,), {
    'DESCRIPTOR' : _GENEDATASETREQUEST_GENEIDS,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneDatasetRequest.GeneIds)
    })
  ,

  'Sort' : _reflection.GeneratedProtocolMessageType('Sort', (_message.Message,), {
    'DESCRIPTOR' : _GENEDATASETREQUEST_SORT,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneDatasetRequest.Sort)
    })
  ,
  'DESCRIPTOR' : _GENEDATASETREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneDatasetRequest)
  })
_sym_db.RegisterMessage(GeneDatasetRequest)
_sym_db.RegisterMessage(GeneDatasetRequest.SymbolsForTaxon)
_sym_db.RegisterMessage(GeneDatasetRequest.GeneIds)
_sym_db.RegisterMessage(GeneDatasetRequest.Sort)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), {
  'DESCRIPTOR' : _ERROR,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Error)
  })
_sym_db.RegisterMessage(Error)

Warning = _reflection.GeneratedProtocolMessageType('Warning', (_message.Message,), {

  'ReplacedId' : _reflection.GeneratedProtocolMessageType('ReplacedId', (_message.Message,), {
    'DESCRIPTOR' : _WARNING_REPLACEDID,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Warning.ReplacedId)
    })
  ,
  'DESCRIPTOR' : _WARNING,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Warning)
  })
_sym_db.RegisterMessage(Warning)
_sym_db.RegisterMessage(Warning.ReplacedId)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGE,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Message)
  })
_sym_db.RegisterMessage(Message)

GeneMatch = _reflection.GeneratedProtocolMessageType('GeneMatch', (_message.Message,), {
  'DESCRIPTOR' : _GENEMATCH,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneMatch)
  })
_sym_db.RegisterMessage(GeneMatch)

GeneMetadata = _reflection.GeneratedProtocolMessageType('GeneMetadata', (_message.Message,), {
  'DESCRIPTOR' : _GENEMETADATA,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneMetadata)
  })
_sym_db.RegisterMessage(GeneMetadata)

AssemblyMatch = _reflection.GeneratedProtocolMessageType('AssemblyMatch', (_message.Message,), {
  'DESCRIPTOR' : _ASSEMBLYMATCH,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyMatch)
  })
_sym_db.RegisterMessage(AssemblyMatch)

AssemblyMetadata = _reflection.GeneratedProtocolMessageType('AssemblyMetadata', (_message.Message,), {
  'DESCRIPTOR' : _ASSEMBLYMETADATA,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AssemblyMetadata)
  })
_sym_db.RegisterMessage(AssemblyMetadata)

GeneDescriptors = _reflection.GeneratedProtocolMessageType('GeneDescriptors', (_message.Message,), {
  'DESCRIPTOR' : _GENEDESCRIPTORS,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.GeneDescriptors)
  })
_sym_db.RegisterMessage(GeneDescriptors)

AnnotationForVirus = _reflection.GeneratedProtocolMessageType('AnnotationForVirus', (_message.Message,), {
  'DESCRIPTOR' : _ANNOTATIONFORVIRUS,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.AnnotationForVirus)
  })
_sym_db.RegisterMessage(AnnotationForVirus)

VirusDatasetRequest = _reflection.GeneratedProtocolMessageType('VirusDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIRUSDATASETREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.VirusDatasetRequest)
  })
_sym_db.RegisterMessage(VirusDatasetRequest)

VirusDatasetFilter = _reflection.GeneratedProtocolMessageType('VirusDatasetFilter', (_message.Message,), {
  'DESCRIPTOR' : _VIRUSDATASETFILTER,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.VirusDatasetFilter)
  })
_sym_db.RegisterMessage(VirusDatasetFilter)

VirusDataReportRequest = _reflection.GeneratedProtocolMessageType('VirusDataReportRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIRUSDATAREPORTREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.VirusDataReportRequest)
  })
_sym_db.RegisterMessage(VirusDataReportRequest)

Sars2ProteinDatasetRequest = _reflection.GeneratedProtocolMessageType('Sars2ProteinDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _SARS2PROTEINDATASETREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.Sars2ProteinDatasetRequest)
  })
_sym_db.RegisterMessage(Sars2ProteinDatasetRequest)

VirusAvailabilityRequest = _reflection.GeneratedProtocolMessageType('VirusAvailabilityRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIRUSAVAILABILITYREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.VirusAvailabilityRequest)
  })
_sym_db.RegisterMessage(VirusAvailabilityRequest)

VirusAvailability = _reflection.GeneratedProtocolMessageType('VirusAvailability', (_message.Message,), {
  'DESCRIPTOR' : _VIRUSAVAILABILITY,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.VirusAvailability)
  })
_sym_db.RegisterMessage(VirusAvailability)

DownloadSummary = _reflection.GeneratedProtocolMessageType('DownloadSummary', (_message.Message,), {

  'Hydrated' : _reflection.GeneratedProtocolMessageType('Hydrated', (_message.Message,), {
    'DESCRIPTOR' : _DOWNLOADSUMMARY_HYDRATED,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.DownloadSummary.Hydrated)
    })
  ,

  'Dehydrated' : _reflection.GeneratedProtocolMessageType('Dehydrated', (_message.Message,), {
    'DESCRIPTOR' : _DOWNLOADSUMMARY_DEHYDRATED,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.DownloadSummary.Dehydrated)
    })
  ,

  'FileSummary' : _reflection.GeneratedProtocolMessageType('FileSummary', (_message.Message,), {
    'DESCRIPTOR' : _DOWNLOADSUMMARY_FILESUMMARY,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.DownloadSummary.FileSummary)
    })
  ,

  'AvailableFiles' : _reflection.GeneratedProtocolMessageType('AvailableFiles', (_message.Message,), {
    'DESCRIPTOR' : _DOWNLOADSUMMARY_AVAILABLEFILES,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.DownloadSummary.AvailableFiles)
    })
  ,
  'DESCRIPTOR' : _DOWNLOADSUMMARY,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.DownloadSummary)
  })
_sym_db.RegisterMessage(DownloadSummary)
_sym_db.RegisterMessage(DownloadSummary.Hydrated)
_sym_db.RegisterMessage(DownloadSummary.Dehydrated)
_sym_db.RegisterMessage(DownloadSummary.FileSummary)
_sym_db.RegisterMessage(DownloadSummary.AvailableFiles)

TabularOutput = _reflection.GeneratedProtocolMessageType('TabularOutput', (_message.Message,), {
  'DESCRIPTOR' : _TABULAROUTPUT,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TabularOutput)
  })
_sym_db.RegisterMessage(TabularOutput)

ElementFlankConfig = _reflection.GeneratedProtocolMessageType('ElementFlankConfig', (_message.Message,), {
  'DESCRIPTOR' : _ELEMENTFLANKCONFIG,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.ElementFlankConfig)
  })
_sym_db.RegisterMessage(ElementFlankConfig)

RefGeneCatalogDatasetRequest = _reflection.GeneratedProtocolMessageType('RefGeneCatalogDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _REFGENECATALOGDATASETREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.RefGeneCatalogDatasetRequest)
  })
_sym_db.RegisterMessage(RefGeneCatalogDatasetRequest)

MicroBiggeDatasetRequest = _reflection.GeneratedProtocolMessageType('MicroBiggeDatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _MICROBIGGEDATASETREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.MicroBiggeDatasetRequest)
  })
_sym_db.RegisterMessage(MicroBiggeDatasetRequest)

VersionReply = _reflection.GeneratedProtocolMessageType('VersionReply', (_message.Message,), {
  'DESCRIPTOR' : _VERSIONREPLY,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.VersionReply)
  })
_sym_db.RegisterMessage(VersionReply)

ProkaryoteGeneRequest = _reflection.GeneratedProtocolMessageType('ProkaryoteGeneRequest', (_message.Message,), {

  'GeneFlankConfig' : _reflection.GeneratedProtocolMessageType('GeneFlankConfig', (_message.Message,), {
    'DESCRIPTOR' : _PROKARYOTEGENEREQUEST_GENEFLANKCONFIG,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.ProkaryoteGeneRequest.GeneFlankConfig)
    })
  ,
  'DESCRIPTOR' : _PROKARYOTEGENEREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.ProkaryoteGeneRequest)
  })
_sym_db.RegisterMessage(ProkaryoteGeneRequest)
_sym_db.RegisterMessage(ProkaryoteGeneRequest.GeneFlankConfig)

SleepRequest = _reflection.GeneratedProtocolMessageType('SleepRequest', (_message.Message,), {
  'DESCRIPTOR' : _SLEEPREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.SleepRequest)
  })
_sym_db.RegisterMessage(SleepRequest)

SleepReply = _reflection.GeneratedProtocolMessageType('SleepReply', (_message.Message,), {
  'DESCRIPTOR' : _SLEEPREPLY,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.SleepReply)
  })
_sym_db.RegisterMessage(SleepReply)

TaxonomyNode = _reflection.GeneratedProtocolMessageType('TaxonomyNode', (_message.Message,), {

  'CountByType' : _reflection.GeneratedProtocolMessageType('CountByType', (_message.Message,), {
    'DESCRIPTOR' : _TAXONOMYNODE_COUNTBYTYPE,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyNode.CountByType)
    })
  ,
  'DESCRIPTOR' : _TAXONOMYNODE,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyNode)
  })
_sym_db.RegisterMessage(TaxonomyNode)
_sym_db.RegisterMessage(TaxonomyNode.CountByType)

TaxonomyMetadataRequest = _reflection.GeneratedProtocolMessageType('TaxonomyMetadataRequest', (_message.Message,), {
  'DESCRIPTOR' : _TAXONOMYMETADATAREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyMetadataRequest)
  })
_sym_db.RegisterMessage(TaxonomyMetadataRequest)

TaxonomyMatch = _reflection.GeneratedProtocolMessageType('TaxonomyMatch', (_message.Message,), {
  'DESCRIPTOR' : _TAXONOMYMATCH,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyMatch)
  })
_sym_db.RegisterMessage(TaxonomyMatch)

TaxonomyMetadataResponse = _reflection.GeneratedProtocolMessageType('TaxonomyMetadataResponse', (_message.Message,), {
  'DESCRIPTOR' : _TAXONOMYMETADATARESPONSE,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyMetadataResponse)
  })
_sym_db.RegisterMessage(TaxonomyMetadataResponse)

TaxonomyFilteredSubtreeRequest = _reflection.GeneratedProtocolMessageType('TaxonomyFilteredSubtreeRequest', (_message.Message,), {
  'DESCRIPTOR' : _TAXONOMYFILTEREDSUBTREEREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyFilteredSubtreeRequest)
  })
_sym_db.RegisterMessage(TaxonomyFilteredSubtreeRequest)

TaxonomyFilteredSubtreeResponse = _reflection.GeneratedProtocolMessageType('TaxonomyFilteredSubtreeResponse', (_message.Message,), {

  'Edge' : _reflection.GeneratedProtocolMessageType('Edge', (_message.Message,), {
    'DESCRIPTOR' : _TAXONOMYFILTEREDSUBTREERESPONSE_EDGE,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyFilteredSubtreeResponse.Edge)
    })
  ,

  'EdgesEntry' : _reflection.GeneratedProtocolMessageType('EdgesEntry', (_message.Message,), {
    'DESCRIPTOR' : _TAXONOMYFILTEREDSUBTREERESPONSE_EDGESENTRY,
    '__module__' : 'ncbi.datasets.v1.datasets_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyFilteredSubtreeResponse.EdgesEntry)
    })
  ,
  'DESCRIPTOR' : _TAXONOMYFILTEREDSUBTREERESPONSE,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.TaxonomyFilteredSubtreeResponse)
  })
_sym_db.RegisterMessage(TaxonomyFilteredSubtreeResponse)
_sym_db.RegisterMessage(TaxonomyFilteredSubtreeResponse.Edge)
_sym_db.RegisterMessage(TaxonomyFilteredSubtreeResponse.EdgesEntry)

DatasetRequest = _reflection.GeneratedProtocolMessageType('DatasetRequest', (_message.Message,), {
  'DESCRIPTOR' : _DATASETREQUEST,
  '__module__' : 'ncbi.datasets.v1.datasets_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1.DatasetRequest)
  })
_sym_db.RegisterMessage(DatasetRequest)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\020ncbi/datasets/v1\370\001\001'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['reference_only']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['reference_only']._serialized_options = b'\302\360\031r\n\005false\0223\n\004true\022+Limit to reference & representative genomes\0224\n\005false\022+Include reference and non-reference genomes'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['refseq_only']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['refseq_only']._serialized_options = b'\030\001'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['assembly_source']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['assembly_source']._serialized_options = b'\302\360\031a\n\003all\022!\n\006refseq\022\027Limit to RefSeq genomes\022#\n\007genbank\022\030Limit to GenBank genomes\022\022\n\003all\022\013All genomes'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['has_annotation']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['has_annotation']._serialized_options = b'\302\360\031N\n\005false\022%\n\004true\022\035Limit to annotated assemblies\022\036\n\005false\022\025Return all assemblies'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['exclude_paired_reports']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['exclude_paired_reports']._serialized_options = b'\302\360\031\\\n\005false\022\036\n\005false\022\025Return all assemblies\0223\n\004true\022+Only return single record for GCA/GCF pairs'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['exclude_atypical']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['exclude_atypical']._serialized_options = b'\302\360\031\226\001\n\005false\022F\n\005false\022=Return all selected genomes, including ones that are atypical\022E\n\004true\022=Only return genomes that have not been classified as atypical'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['assembly_version']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['assembly_version']._serialized_options = b'\302\360\031\200\001\n\007current\022)\n\007current\022\036Only return current assemblies\022J\n\016all_assemblies\0228Return all assemblies, including suppressed and replaced'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['assembly_level']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['assembly_level']._serialized_options = b'\302\360\031}\022=\n\nchromosome\n\017complete_genome\022\036Chromosome and complete genome\022<\n\010scaffold\n\nchromosome\n\017complete_genome\022\023Scaffold and higher'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['first_release_date']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['first_release_date']._serialized_options = b'\302\360\031\034\022\032\n\n01/10/2015\022\014Jan 10, 2015'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['last_release_date']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['last_release_date']._serialized_options = b'\302\360\031\034\022\032\n\n01/10/2021\022\014Jan 10, 2021'
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['search_text']._options = None
  _ASSEMBLYDATASETDESCRIPTORSFILTER.fields_by_name['search_text']._serialized_options = b'\302\360\031d\022:\n\033Genome Reference Consortium\022\033Genome Reference Consortium\022\020\n\006GRCh38\022\006GRCh38\022\024\n\010C57BL/6J\022\010C57BL/6J'
  _ACCESSIONS.fields_by_name['accessions']._options = None
  _ACCESSIONS.fields_by_name['accessions']._serialized_options = b'\302\360\031R\0225\n\020GCF_000001405.40\n\020GCF_000001635.27\022\017Human and Mouse\022\031\n\020GCF_000001405.40\022\005Human'
  _ASSEMBLYMETADATAREQUEST_BIOPROJECTS.fields_by_name['accessions']._options = None
  _ASSEMBLYMETADATAREQUEST_BIOPROJECTS.fields_by_name['accessions']._serialized_options = b'\302\360\031O\022)\n\013PRJNA489243\022\032Vertebrate Genomes Project\022\"\n\nPRJNA31257\022\024Human Genome Project'
  _ASSEMBLYMETADATAREQUEST.fields_by_name['taxon']._options = None
  _ASSEMBLYMETADATAREQUEST.fields_by_name['taxon']._serialized_options = b'\302\360\031Y\022 \n\0049606\022\030NCBI Taxonomy Identifier\022\024\n\005human\022\013Common Name\022\037\n\014Homo sapiens\022\017Scientific Name'
  _ASSEMBLYMETADATAREQUEST.fields_by_name['tax_exact_match']._options = None
  _ASSEMBLYMETADATAREQUEST.fields_by_name['tax_exact_match']._serialized_options = b'\302\360\031\007\n\005false'
  _ASSEMBLYMETADATAREQUEST.fields_by_name['limit']._options = None
  _ASSEMBLYMETADATAREQUEST.fields_by_name['limit']._serialized_options = b'\030\001'
  _ASSEMBLYMETADATAREQUEST.fields_by_name['page_size']._options = None
  _ASSEMBLYMETADATAREQUEST.fields_by_name['page_size']._serialized_options = b'\302\360\031\004\n\00220'
  _ASSEMBLYMETADATAREQUEST._options = None
  _ASSEMBLYMETADATAREQUEST._serialized_options = b'\302\360\0310\n.accessions:\n  accessions:\n  - GCF_000001405.40'
  _ASSEMBLYDATASETDESCRIPTORSREQUEST.fields_by_name['org_name']._options = None
  _ASSEMBLYDATASETDESCRIPTORSREQUEST.fields_by_name['org_name']._serialized_options = b'\030\001'
  _ASSEMBLYDATASETDESCRIPTORSREQUEST.fields_by_name['cutoff']._options = None
  _ASSEMBLYDATASETDESCRIPTORSREQUEST.fields_by_name['cutoff']._serialized_options = b'\030\001'
  _ANNOTATIONFORASSEMBLY_TYPE._options = None
  _ANNOTATIONFORASSEMBLY_TYPE._serialized_options = b'\020\001'
  _ANNOTATIONFORASSEMBLY_TYPE.values_by_name["GENOME_GB"]._options = None
  _ANNOTATIONFORASSEMBLY_TYPE.values_by_name["GENOME_GB"]._serialized_options = b'\010\001'
  _ASSEMBLYDATASETREQUEST.fields_by_name['assembly_accessions']._options = None
  _ASSEMBLYDATASETREQUEST.fields_by_name['assembly_accessions']._serialized_options = b'\030\001'
  _ASSEMBLYDATASETREQUEST.fields_by_name['accessions']._options = None
  _ASSEMBLYDATASETREQUEST.fields_by_name['accessions']._serialized_options = b'\302\360\031R\0225\n\020GCF_000001405.40\n\020GCF_000001635.27\022\017Human and Mouse\022\031\n\020GCF_000001405.40\022\005Human'
  _ASSEMBLYDATASETREQUEST.fields_by_name['chromosomes']._options = None
  _ASSEMBLYDATASETREQUEST.fields_by_name['chromosomes']._serialized_options = b'\302\360\031M\022,\n\0011\n\0012\n\0013\n\001X\n\001Y\n\002MT\022\027Selected chromosomes #1\022\035\n\001X\n\001Y\022\025Human sex chromosomes'
  _ASSEMBLYDATASETREQUEST.fields_by_name['include_annotation']._options = None
  _ASSEMBLYDATASETREQUEST.fields_by_name['include_annotation']._serialized_options = b'\030\001\332\360\031\002\010\002'
  _ASSEMBLYDATASETREQUEST.fields_by_name['exclude_sequence']._options = None
  _ASSEMBLYDATASETREQUEST.fields_by_name['exclude_sequence']._serialized_options = b'\332\360\031\002\010\002\302\360\031L\n\005false\022 \n\004true\022\030Exclude genomic sequence\022!\n\005false\022\030Include genomic sequence'
  _ASSEMBLYDATASETREQUEST.fields_by_name['include_annotation_type']._options = None
  _ASSEMBLYDATASETREQUEST.fields_by_name['include_annotation_type']._serialized_options = b'\332\360\031\002\010\002\302\360\031\206\001\0226\n\nPROT_FASTA\n\tRNA_FASTA\022\035Transcript & Protein Sequence\022L\n\nGENOME_GFF\n\013GENOME_GBFF\n\nGENOME_GTF\n\nPROT_FASTA\n\tRNA_FASTA\n\tCDS_FASTA\022\003All'
  _ASSEMBLYDATASETREQUEST.fields_by_name['include_tsv']._options = None
  _ASSEMBLYDATASETREQUEST.fields_by_name['include_tsv']._serialized_options = b'\332\360\031\002\010\002\302\360\031\007\n\005false'
  _ASSEMBLYDATASETREQUEST._options = None
  _ASSEMBLYDATASETREQUEST._serialized_options = b'\302\360\031 \n\036accessions:\n- GCF_000001405.40'
  _ORGANISM.fields_by_name['assembly_count']._options = None
  _ORGANISM.fields_by_name['assembly_count']._serialized_options = b'\030\001'
  _TAXTREEREQUEST.fields_by_name['tax_id']._options = None
  _TAXTREEREQUEST.fields_by_name['tax_id']._serialized_options = b'\030\001'
  _TAXTREEREQUEST.fields_by_name['tax_token']._options = None
  _TAXTREEREQUEST.fields_by_name['tax_token']._serialized_options = b'\030\001'
  _TAXTREEREQUEST.fields_by_name['taxon']._options = None
  _TAXTREEREQUEST.fields_by_name['taxon']._serialized_options = b'\302\360\031Y\022 \n\0049606\022\030NCBI Taxonomy Identifier\022\024\n\005human\022\013Common Name\022\037\n\014Homo sapiens\022\017Scientific Name'
  _TAXTREEREQUEST.fields_by_name['children_only']._options = None
  _TAXTREEREQUEST.fields_by_name['children_only']._serialized_options = b'\302\360\031\007\n\005false'
  _ORGANISMQUERYREQUEST.fields_by_name['organism_query']._options = None
  _ORGANISMQUERYREQUEST.fields_by_name['organism_query']._serialized_options = b'\030\001'
  _ORGANISMQUERYREQUEST.fields_by_name['taxon_query']._options = None
  _ORGANISMQUERYREQUEST.fields_by_name['taxon_query']._serialized_options = b'\302\360\031\014\022\n\n\003hum\022\003hum'
  _ORGANISMQUERYREQUEST.fields_by_name['tax_rank_filter']._options = None
  _ORGANISMQUERYREQUEST.fields_by_name['tax_rank_filter']._serialized_options = b'\302\360\031\t\n\007species'
  _ORGANISMQUERYREQUEST.fields_by_name['tax_resource_filter']._options = None
  _ORGANISMQUERYREQUEST.fields_by_name['tax_resource_filter']._serialized_options = b'\302\360\031\005\n\003all'
  _ORTHOLOGREQUEST.fields_by_name['gene_id']._options = None
  _ORTHOLOGREQUEST.fields_by_name['gene_id']._serialized_options = b'\302\360\031\030\022\014\n\0042778\022\004GNAS\022\010\n\0012\022\003A2M'
  _ORTHOLOGREQUEST.fields_by_name['taxon_filter']._options = None
  _ORTHOLOGREQUEST.fields_by_name['taxon_filter']._serialized_options = b'\302\360\031{\022\'\n\0049606\n\00510090\022\030NCBI Taxonomy Identifier\022!\n\005human\n\013house mouse\022\013Common Name\022-\n\014homo sapiens\n\014mus musculus\022\017Scientific Name'
  _GENEDATASETREQUEST_SYMBOLSFORTAXON.fields_by_name['symbols']._options = None
  _GENEDATASETREQUEST_SYMBOLSFORTAXON.fields_by_name['symbols']._serialized_options = b'\302\360\031\016\022\014\n\004GNAS\022\004GNAS'
  _GENEDATASETREQUEST_SYMBOLSFORTAXON.fields_by_name['taxon']._options = None
  _GENEDATASETREQUEST_SYMBOLSFORTAXON.fields_by_name['taxon']._serialized_options = b'\302\360\031Y\022 \n\0049606\022\030NCBI Taxonomy Identifier\022\024\n\005human\022\013Common Name\022\037\n\014Homo sapiens\022\017Scientific Name'
  _GENEDATASETREQUEST.fields_by_name['gene_ids']._options = None
  _GENEDATASETREQUEST.fields_by_name['gene_ids']._serialized_options = b'\302\360\031<\022\024\n\00559067\022\013IL21 GeneID\022$\n\00559067\n\00550615\022\024IL21 & IL21R GeneIDs'
  _GENEDATASETREQUEST.fields_by_name['accessions']._options = None
  _GENEDATASETREQUEST.fields_by_name['accessions']._serialized_options = b'\302\360\031]\022.\n\013NM_021803.4\n\013NM_181078.3\022\022RefSeq transcripts\022+\n\013NP_068575.1\n\013NP_851564.1\022\017RefSeq proteins'
  _GENEDATASETREQUEST.fields_by_name['taxon']._options = None
  _GENEDATASETREQUEST.fields_by_name['taxon']._serialized_options = b'\302\360\031Y\022 \n\0049606\022\030NCBI Taxonomy Identifier\022\024\n\005human\022\013Common Name\022\037\n\014Homo sapiens\022\017Scientific Name'
  _GENEDATASETREQUEST.fields_by_name['include_annotation_type']._options = None
  _GENEDATASETREQUEST.fields_by_name['include_annotation_type']._serialized_options = b'\332\360\031\002\010\002'
  _GENEDATASETREQUEST._options = None
  _GENEDATASETREQUEST._serialized_options = b'\302\360\031\033\n\031gene_ids:\n- 59067\n- 50615'
  _ERROR.fields_by_name['valid_identifiers']._options = None
  _ERROR.fields_by_name['valid_identifiers']._serialized_options = b'\030\001'
  _GENEMATCH.fields_by_name['messages']._options = None
  _GENEMATCH.fields_by_name['messages']._serialized_options = b'\030\001'
  _VIRUSDATASETREQUEST.fields_by_name['tax_id']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['tax_id']._serialized_options = b'\030\001'
  _VIRUSDATASETREQUEST.fields_by_name['tax_name']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['tax_name']._serialized_options = b'\030\001'
  _VIRUSDATASETREQUEST.fields_by_name['accessions']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['accessions']._serialized_options = b'\302\360\031?\022=\n\013NC_045512.2\022.SARS-COV-2 isolate Wuhan-Hu-1, complete genome'
  _VIRUSDATASETREQUEST.fields_by_name['taxon']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['taxon']._serialized_options = b'\302\360\031@\022\025\n\0072697049\022\nSARS-COV-2\022\026\n\00511118\022\rCoronaviridae\022\017\n\0071335626\022\004MERS'
  _VIRUSDATASETREQUEST.fields_by_name['refseq_only']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['refseq_only']._serialized_options = b'\302\360\031P\n\005false\022\037\n\004true\022\027Limit to RefSeq genomes\022&\n\005false\022\035Both GenBank & RefSeq genomes'
  _VIRUSDATASETREQUEST.fields_by_name['annotated_only']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['annotated_only']._serialized_options = b'\302\360\031A\n\005false\022\"\n\004true\022\032Limit to annotated genomes\022\024\n\005false\022\013All genomes'
  _VIRUSDATASETREQUEST.fields_by_name['released_since']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['released_since']._serialized_options = b'\302\360\031\036\022\034\n\n2020-08-01\022\016August 1, 2020'
  _VIRUSDATASETREQUEST.fields_by_name['updated_since']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['updated_since']._serialized_options = b'\302\360\031\035\022\033\n\n2021-07-18\022\rJuly 18, 2021'
  _VIRUSDATASETREQUEST.fields_by_name['host']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['host']._serialized_options = b'\302\360\031\020\022\016\n\005human\022\005human'
  _VIRUSDATASETREQUEST.fields_by_name['geo_location']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['geo_location']._serialized_options = b'\302\360\031\031\022\n\n\003USA\022\003USA\022\013\n\002TX\022\005Texas'
  _VIRUSDATASETREQUEST.fields_by_name['complete_only']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['complete_only']._serialized_options = b'\302\360\031@\n\005false\022!\n\004true\022\031Limit to complete genomes\022\024\n\005false\022\013All genomes'
  _VIRUSDATASETREQUEST.fields_by_name['table_fields']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['table_fields']._serialized_options = b'\302\360\031N\022L\n\024nucleotide_accession\n\021nucleotide_length\n\020nuc_completeness\022\017Assembly Fields'
  _VIRUSDATASETREQUEST.fields_by_name['exclude_sequence']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['exclude_sequence']._serialized_options = b'\332\360\031\002\010\002\302\360\031L\n\005false\022 \n\004true\022\030Exclude genomic sequence\022!\n\005false\022\030Include genomic sequence'
  _VIRUSDATASETREQUEST.fields_by_name['include_annotation_type']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['include_annotation_type']._serialized_options = b'\332\360\031\002\010\002\302\360\031K\022 \n\tCDS_FASTA\022\023Transcript sequence\022\'\n\tCDS_FASTA\n\nPROT_FASTA\022\016All annotation'
  _VIRUSDATASETREQUEST.fields_by_name['format']._options = None
  _VIRUSDATASETREQUEST.fields_by_name['format']._serialized_options = b'\302\360\0312\n\003tsv\022\n\n\003tsv\022\003TSV\022\n\n\003csv\022\003CSV\022\023\n\005jsonl\022\nJSON Lines'
  _VIRUSDATASETFILTER.fields_by_name['accessions']._options = None
  _VIRUSDATASETFILTER.fields_by_name['accessions']._serialized_options = b'\302\360\031\206\001\022\203\001\n\027NC_045512.2,NC_038294.1\022hSARS-COV-2 isolate Wuhan-Hu-1 and Middle East respiratory syndrome-related coronavirus, complete genomes'
  _VIRUSDATASETFILTER.fields_by_name['taxon']._options = None
  _VIRUSDATASETFILTER.fields_by_name['taxon']._serialized_options = b'\302\360\031@\022\025\n\0072697049\022\nSARS-COV-2\022\026\n\00511118\022\rCoronaviridae\022\017\n\0071335626\022\004MERS'
  _VIRUSDATASETFILTER.fields_by_name['refseq_only']._options = None
  _VIRUSDATASETFILTER.fields_by_name['refseq_only']._serialized_options = b'\302\360\031P\n\005false\022\037\n\004true\022\027Limit to RefSeq genomes\022&\n\005false\022\035Both GenBank & RefSeq genomes'
  _VIRUSDATASETFILTER.fields_by_name['annotated_only']._options = None
  _VIRUSDATASETFILTER.fields_by_name['annotated_only']._serialized_options = b'\302\360\031A\n\005false\022\"\n\004true\022\032Limit to annotated genomes\022\024\n\005false\022\013All genomes'
  _VIRUSDATASETFILTER.fields_by_name['released_since']._options = None
  _VIRUSDATASETFILTER.fields_by_name['released_since']._serialized_options = b'\302\360\031\036\022\034\n\n2020-08-01\022\016August 1, 2020'
  _VIRUSDATASETFILTER.fields_by_name['updated_since']._options = None
  _VIRUSDATASETFILTER.fields_by_name['updated_since']._serialized_options = b'\302\360\031\035\022\033\n\n2021-07-18\022\rJuly 18, 2021'
  _VIRUSDATASETFILTER.fields_by_name['host']._options = None
  _VIRUSDATASETFILTER.fields_by_name['host']._serialized_options = b'\302\360\031\020\022\016\n\005human\022\005human'
  _VIRUSDATASETFILTER.fields_by_name['geo_location']._options = None
  _VIRUSDATASETFILTER.fields_by_name['geo_location']._serialized_options = b'\302\360\031\031\022\n\n\003USA\022\003USA\022\013\n\002TX\022\005Texas'
  _VIRUSDATASETFILTER.fields_by_name['complete_only']._options = None
  _VIRUSDATASETFILTER.fields_by_name['complete_only']._serialized_options = b'\302\360\031@\n\005false\022!\n\004true\022\031Limit to complete genomes\022\024\n\005false\022\013All genomes'
  _VIRUSDATAREPORTREQUEST.fields_by_name['table_fields']._options = None
  _VIRUSDATAREPORTREQUEST.fields_by_name['table_fields']._serialized_options = b'\302\360\031=\022;\n\taccession\n\013is-complete\n\014is-annotated\022\023Virus Genome Fields'
  _VIRUSDATAREPORTREQUEST.fields_by_name['page_size']._options = None
  _VIRUSDATAREPORTREQUEST.fields_by_name['page_size']._serialized_options = b'\302\360\031\004\n\00220'
  _VIRUSDATAREPORTREQUEST._options = None
  _VIRUSDATAREPORTREQUEST._serialized_options = b'\302\360\031\"\n taxon: 2697049\nrefseq_only: true'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['proteins']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['proteins']._serialized_options = b'\302\360\031^\022\036\n\rspike protein\022\rSpike Protein\022<\n\rspike protein\n\020envelope protein\n\004RdRp\022\023SARS-CoV-2 proteins'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['refseq_only']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['refseq_only']._serialized_options = b'\302\360\031P\n\005false\022\037\n\004true\022\027Limit to RefSeq genomes\022&\n\005false\022\035Both GenBank & RefSeq genomes'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['annotated_only']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['annotated_only']._serialized_options = b'\302\360\031A\n\005false\022\"\n\004true\022\032Limit to annotated genomes\022\024\n\005false\022\013All genomes'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['released_since']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['released_since']._serialized_options = b'\302\360\031\036\022\034\n\n2020-08-01\022\016August 1, 2020'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['updated_since']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['updated_since']._serialized_options = b'\302\360\031\035\022\033\n\n2021-07-18\022\rJuly 18, 2021'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['host']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['host']._serialized_options = b'\302\360\031\020\022\016\n\005human\022\005human'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['geo_location']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['geo_location']._serialized_options = b'\302\360\031\031\022\n\n\003USA\022\003USA\022\013\n\002TX\022\005Texas'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['complete_only']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['complete_only']._serialized_options = b'\302\360\031@\n\005false\022!\n\004true\022\031Limit to complete genomes\022\024\n\005false\022\013All genomes'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['table_fields']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['table_fields']._serialized_options = b'\302\360\031N\022L\n\024nucleotide_accession\n\021nucleotide_length\n\020nuc_completeness\022\017Assembly Fields'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['exclude_sequence']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['exclude_sequence']._serialized_options = b'\332\360\031\002\010\002\302\360\031L\n\005false\022 \n\004true\022\030Exclude genomic sequence\022!\n\005false\022\030Include genomic sequence'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['include_annotation_type']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['include_annotation_type']._serialized_options = b'\332\360\031\002\010\002\302\360\031K\022 \n\tCDS_FASTA\022\023Transcript sequence\022\'\n\tCDS_FASTA\n\nPROT_FASTA\022\016All annotation'
  _SARS2PROTEINDATASETREQUEST.fields_by_name['format']._options = None
  _SARS2PROTEINDATASETREQUEST.fields_by_name['format']._serialized_options = b'\302\360\0312\n\003tsv\022\n\n\003tsv\022\003TSV\022\n\n\003csv\022\003CSV\022\023\n\005jsonl\022\nJSON Lines'
  _VIRUSAVAILABILITYREQUEST.fields_by_name['accessions']._options = None
  _VIRUSAVAILABILITYREQUEST.fields_by_name['accessions']._serialized_options = b'\302\360\031\206\001\022\203\001\n\027NC_045512.2,NC_038294.1\022hSARS-COV-2 isolate Wuhan-Hu-1 and Middle East respiratory syndrome-related coronavirus, complete genomes'
  _DOWNLOADSUMMARY.fields_by_name['assembly_count']._options = None
  _DOWNLOADSUMMARY.fields_by_name['assembly_count']._serialized_options = b'\030\001'
  _DOWNLOADSUMMARY.fields_by_name['errors']._options = None
  _DOWNLOADSUMMARY.fields_by_name['errors']._serialized_options = b'\030\001'
  _REFGENECATALOGDATASETREQUEST.fields_by_name['files']._options = None
  _REFGENECATALOGDATASETREQUEST.fields_by_name['files']._serialized_options = b'\332\360\031\002\010\002'
  _MICROBIGGEDATASETREQUEST.fields_by_name['files']._options = None
  _MICROBIGGEDATASETREQUEST.fields_by_name['files']._serialized_options = b'\332\360\031\002\010\002'
  _PROKARYOTEGENEREQUEST.fields_by_name['accessions']._options = None
  _PROKARYOTEGENEREQUEST.fields_by_name['accessions']._serialized_options = b'\302\360\031o\022.\n\016WP_015878339.1\022\034DNA-deoxyinosine glycosylase\022=\n\016WP_001040085.1\022+type II CRISPR RNA-guided endonuclease Cas9'
  _PROKARYOTEGENEREQUEST.fields_by_name['include_annotation_type']._options = None
  _PROKARYOTEGENEREQUEST.fields_by_name['include_annotation_type']._serialized_options = b'\332\360\031\002\010\002\302\360\031\231\001\022\036\n\nFASTA_GENE\022\020Gene range FASTA\022?\n\tFASTA_RNA\n\rFASTA_PROTEIN\022#Transcript & protein sequence FASTA\0226\n\nFASTA_GENE\n\tFASTA_RNA\n\rFASTA_PROTEIN\022\016All annotation'
  _PROKARYOTEGENEREQUEST._options = None
  _PROKARYOTEGENEREQUEST._serialized_options = b'\302\360\031/\n-accessions:\n- WP_000000001.1\n- WP_000000002.1'
  _TAXONOMYMETADATAREQUEST.fields_by_name['taxons']._options = None
  _TAXONOMYMETADATAREQUEST.fields_by_name['taxons']._serialized_options = b'\302\360\031u\022\'\n\0049606\n\00510090\022\030NCBI Taxonomy Identifier\022\033\n\005human\n\005mouse\022\013Common Name\022-\n\014Homo sapiens\n\014Mus musculus\022\017Scientific Name'
  _TAXONOMYMETADATAREQUEST._options = None
  _TAXONOMYMETADATAREQUEST._serialized_options = b'\302\360\031\030\n\026taxons:\n- 9606\n- mouse'
  _TAXONOMYFILTEREDSUBTREEREQUEST.fields_by_name['taxons']._options = None
  _TAXONOMYFILTEREDSUBTREEREQUEST.fields_by_name['taxons']._serialized_options = b'\302\360\031u\022\'\n\0049606\n\00510090\022\030NCBI Taxonomy Identifier\022\033\n\005human\n\005mouse\022\013Common Name\022-\n\014Homo sapiens\n\014Mus musculus\022\017Scientific Name'
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGESENTRY._options = None
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGESENTRY._serialized_options = b'8\001'
  _COUNTTYPE._serialized_start=25083
  _COUNTTYPE._serialized_end=25460
  _SORTDIRECTION._serialized_start=25462
  _SORTDIRECTION._serialized_end=25570
  _FASTA._serialized_start=25573
  _FASTA._serialized_end=25726
  _VIRUSTABLEFIELD._serialized_start=25729
  _VIRUSTABLEFIELD._serialized_end=26146
  _TABLEFORMAT._serialized_start=26148
  _TABLEFORMAT._serialized_end=26190
  _METHODPAYLOADREQUEST._serialized_start=242
  _METHODPAYLOADREQUEST._serialized_end=314
  _ASSEMBLYDATASETDESCRIPTORSFILTER._serialized_start=317
  _ASSEMBLYDATASETDESCRIPTORSFILTER._serialized_end=2262
  _ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYSOURCE._serialized_start=2080
  _ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYSOURCE._serialized_end=2130
  _ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYVERSION._serialized_start=2132
  _ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYVERSION._serialized_end=2182
  _ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYLEVEL._serialized_start=2184
  _ASSEMBLYDATASETDESCRIPTORSFILTER_ASSEMBLYLEVEL._serialized_end=2262
  _ACCESSIONS._serialized_start=2265
  _ACCESSIONS._serialized_end=2397
  _ASSEMBLYMETADATAREQUEST._serialized_start=2400
  _ASSEMBLYMETADATAREQUEST._serialized_end=3263
  _ASSEMBLYMETADATAREQUEST_BIOPROJECTS._serialized_start=3025
  _ASSEMBLYMETADATAREQUEST_BIOPROJECTS._serialized_end=3155
  _ASSEMBLYMETADATAREQUEST_CONTENTTYPE._serialized_start=3157
  _ASSEMBLYMETADATAREQUEST_CONTENTTYPE._serialized_end=3198
  _ASSEMBLYDATASETDESCRIPTORSREQUEST._serialized_start=3266
  _ASSEMBLYDATASETDESCRIPTORSREQUEST._serialized_end=3789
  _ASSEMBLYDATASETDESCRIPTORSREQUEST_CONTENTTYPE._serialized_start=3719
  _ASSEMBLYDATASETDESCRIPTORSREQUEST_CONTENTTYPE._serialized_end=3772
  _ASSEMBLYDATASETDESCRIPTORS._serialized_start=3792
  _ASSEMBLYDATASETDESCRIPTORS._serialized_end=3926
  _BIOPROJECT._serialized_start=3929
  _BIOPROJECT._serialized_end=4081
  _BIOPROJECTLINEAGE._serialized_start=4083
  _BIOPROJECTLINEAGE._serialized_end=4166
  _ASSEMBLYDATASETDESCRIPTOR._serialized_start=4169
  _ASSEMBLYDATASETDESCRIPTOR._serialized_end=5219
  _ASSEMBLYDATASETDESCRIPTOR_CHROMOSOME._serialized_start=5091
  _ASSEMBLYDATASETDESCRIPTOR_CHROMOSOME._serialized_end=5219
  _BUSCOSTAT._serialized_start=5222
  _BUSCOSTAT._serialized_end=5483
  _ANNOTATIONFORASSEMBLY._serialized_start=5486
  _ANNOTATIONFORASSEMBLY._serialized_end=6117
  _ANNOTATIONFORASSEMBLY_FILE._serialized_start=5832
  _ANNOTATIONFORASSEMBLY_FILE._serialized_end=5943
  _ANNOTATIONFORASSEMBLY_TYPE._serialized_start=5946
  _ANNOTATIONFORASSEMBLY_TYPE._serialized_end=6117
  _FEATURECOUNTS._serialized_start=6119
  _FEATURECOUNTS._serialized_end=6197
  _GENECOUNTS._serialized_start=6199
  _GENECOUNTS._serialized_end=6272
  _ASSEMBLYDATASETREQUEST._serialized_start=6275
  _ASSEMBLYDATASETREQUEST._serialized_end=7256
  _ASSEMBLYDATASETREQUEST_RESOLUTION._serialized_start=7164
  _ASSEMBLYDATASETREQUEST_RESOLUTION._serialized_end=7218
  _ASSEMBLYDATASETAVAILABILITY._serialized_start=7259
  _ASSEMBLYDATASETAVAILABILITY._serialized_end=7402
  _TAXIDREQUEST._serialized_start=7404
  _TAXIDREQUEST._serialized_end=7445
  _TAXIDREPLY._serialized_start=7447
  _TAXIDREPLY._serialized_end=7482
  _ORGANISM._serialized_start=7485
  _ORGANISM._serialized_end=9193
  _ORGANISM_COUNTS._serialized_start=8344
  _ORGANISM_COUNTS._serialized_end=8398
  _ORGANISM_COUNTBYTYPE._serialized_start=8400
  _ORGANISM_COUNTBYTYPE._serialized_end=8521
  _ORGANISM_RANKTYPE._serialized_start=8524
  _ORGANISM_RANKTYPE._serialized_end=9193
  _TAXTREEREQUEST._serialized_start=9196
  _TAXTREEREQUEST._serialized_end=9457
  _ORGANISMQUERYREQUEST._serialized_start=9460
  _ORGANISMQUERYREQUEST._serialized_end=9916
  _ORGANISMQUERYREQUEST_TAXRANKFILTER._serialized_start=9810
  _ORGANISMQUERYREQUEST_TAXRANKFILTER._serialized_end=9856
  _ORGANISMQUERYREQUEST_TAXONRESOURCEFILTER._serialized_start=9858
  _ORGANISMQUERYREQUEST_TAXONRESOURCEFILTER._serialized_end=9910
  _SCINAMEANDIDS._serialized_start=9919
  _SCINAMEANDIDS._serialized_end=10156
  _SCINAMEANDIDS_SCINAMEANDID._serialized_start=10024
  _SCINAMEANDIDS_SCINAMEANDID._serialized_end=10156
  _ORTHOLOGREQUEST._serialized_start=10159
  _ORTHOLOGREQUEST._serialized_end=10529
  _ORTHOLOGREQUEST_CONTENTTYPE._serialized_start=10488
  _ORTHOLOGREQUEST_CONTENTTYPE._serialized_end=10529
  _ORTHOLOGSET._serialized_start=10532
  _ORTHOLOGSET._serialized_end=10663
  _GENEDATASETREQUEST._serialized_start=10666
  _GENEDATASETREQUEST._serialized_end=11999
  _GENEDATASETREQUEST_SYMBOLSFORTAXON._serialized_start=11444
  _GENEDATASETREQUEST_SYMBOLSFORTAXON._serialized_end=11624
  _GENEDATASETREQUEST_GENEIDS._serialized_start=11626
  _GENEDATASETREQUEST_GENEIDS._serialized_end=11662
  _GENEDATASETREQUEST_SORT._serialized_start=11665
  _GENEDATASETREQUEST_SORT._serialized_end=11804
  _GENEDATASETREQUEST_CONTENTTYPE._serialized_start=10488
  _GENEDATASETREQUEST_CONTENTTYPE._serialized_end=10529
  _GENEDATASETREQUEST_SORTFIELD._serialized_start=11849
  _GENEDATASETREQUEST_SORTFIELD._serialized_end=11966
  _ERROR._serialized_start=12002
  _ERROR._serialized_end=12710
  _ERROR_ASSEMBLYERRORCODE._serialized_start=12418
  _ERROR_ASSEMBLYERRORCODE._serialized_end=12578
  _ERROR_GENEERRORCODE._serialized_start=12580
  _ERROR_GENEERRORCODE._serialized_end=12654
  _ERROR_VIRUSERRORCODE._serialized_start=12656
  _ERROR_VIRUSERRORCODE._serialized_end=12702
  _WARNING._serialized_start=12713
  _WARNING._serialized_end=13312
  _WARNING_REPLACEDID._serialized_start=12991
  _WARNING_REPLACEDID._serialized_end=13061
  _WARNING_GENEWARNINGCODE._serialized_start=13064
  _WARNING_GENEWARNINGCODE._serialized_end=13304
  _MESSAGE._serialized_start=13314
  _MESSAGE._serialized_end=13438
  _GENEMATCH._serialized_start=13441
  _GENEMATCH._serialized_end=13691
  _GENEMETADATA._serialized_start=13694
  _GENEMETADATA._serialized_end=13847
  _ASSEMBLYMATCH._serialized_start=13850
  _ASSEMBLYMATCH._serialized_end=13993
  _ASSEMBLYMETADATA._serialized_start=13996
  _ASSEMBLYMETADATA._serialized_end=14207
  _GENEDESCRIPTORS._serialized_start=14209
  _GENEDESCRIPTORS._serialized_end=14331
  _ANNOTATIONFORVIRUS._serialized_start=14334
  _ANNOTATIONFORVIRUS._serialized_end=14470
  _ANNOTATIONFORVIRUS_TYPE._serialized_start=14356
  _ANNOTATIONFORVIRUS_TYPE._serialized_end=14470
  _VIRUSDATASETREQUEST._serialized_start=14473
  _VIRUSDATASETREQUEST._serialized_end=16064
  _VIRUSDATASETFILTER._serialized_start=16067
  _VIRUSDATASETFILTER._serialized_end=17058
  _VIRUSDATAREPORTREQUEST._serialized_start=17061
  _VIRUSDATAREPORTREQUEST._serialized_end=17541
  _VIRUSDATAREPORTREQUEST_CONTENTTYPE._serialized_start=17453
  _VIRUSDATAREPORTREQUEST_CONTENTTYPE._serialized_end=17501
  _SARS2PROTEINDATASETREQUEST._serialized_start=17544
  _SARS2PROTEINDATASETREQUEST._serialized_end=18932
  _VIRUSAVAILABILITYREQUEST._serialized_start=18935
  _VIRUSAVAILABILITYREQUEST._serialized_end=19136
  _VIRUSAVAILABILITY._serialized_start=19139
  _VIRUSAVAILABILITY._serialized_end=19274
  _DOWNLOADSUMMARY._serialized_start=19277
  _DOWNLOADSUMMARY._serialized_end=20881
  _DOWNLOADSUMMARY_HYDRATED._serialized_start=19800
  _DOWNLOADSUMMARY_HYDRATED._serialized_end=19940
  _DOWNLOADSUMMARY_DEHYDRATED._serialized_start=19943
  _DOWNLOADSUMMARY_DEHYDRATED._serialized_end=20146
  _DOWNLOADSUMMARY_FILESUMMARY._serialized_start=20148
  _DOWNLOADSUMMARY_FILESUMMARY._serialized_end=20217
  _DOWNLOADSUMMARY_AVAILABLEFILES._serialized_start=20220
  _DOWNLOADSUMMARY_AVAILABLEFILES._serialized_end=20881
  _TABULAROUTPUT._serialized_start=20883
  _TABULAROUTPUT._serialized_end=20918
  _ELEMENTFLANKCONFIG._serialized_start=20920
  _ELEMENTFLANKCONFIG._serialized_end=20964
  _REFGENECATALOGDATASETREQUEST._serialized_start=20967
  _REFGENECATALOGDATASETREQUEST._serialized_end=21352
  _REFGENECATALOGDATASETREQUEST_FILETYPE._serialized_start=21220
  _REFGENECATALOGDATASETREQUEST_FILETYPE._serialized_end=21343
  _MICROBIGGEDATASETREQUEST._serialized_start=21355
  _MICROBIGGEDATASETREQUEST._serialized_end=21727
  _MICROBIGGEDATASETREQUEST_FILETYPE._serialized_start=21600
  _MICROBIGGEDATASETREQUEST_FILETYPE._serialized_end=21718
  _VERSIONREPLY._serialized_start=21729
  _VERSIONREPLY._serialized_end=21856
  _PROKARYOTEGENEREQUEST._serialized_start=21859
  _PROKARYOTEGENEREQUEST._serialized_end=22500
  _PROKARYOTEGENEREQUEST_GENEFLANKCONFIG._serialized_start=22406
  _PROKARYOTEGENEREQUEST_GENEFLANKCONFIG._serialized_end=22447
  _SLEEPREQUEST._serialized_start=22502
  _SLEEPREQUEST._serialized_end=22578
  _SLEEPREPLY._serialized_start=22580
  _SLEEPREPLY._serialized_end=22614
  _TAXONOMYNODE._serialized_start=22617
  _TAXONOMYNODE._serialized_end=23235
  _TAXONOMYNODE_COUNTBYTYPE._serialized_start=23151
  _TAXONOMYNODE_COUNTBYTYPE._serialized_end=23235
  _TAXONOMYMETADATAREQUEST._serialized_start=23238
  _TAXONOMYMETADATAREQUEST._serialized_end=23580
  _TAXONOMYMETADATAREQUEST_CONTENTTYPE._serialized_start=23511
  _TAXONOMYMETADATAREQUEST_CONTENTTYPE._serialized_end=23550
  _TAXONOMYMATCH._serialized_start=23583
  _TAXONOMYMATCH._serialized_end=23784
  _TAXONOMYMETADATARESPONSE._serialized_start=23787
  _TAXONOMYMETADATARESPONSE._serialized_end=23940
  _TAXONOMYFILTEREDSUBTREEREQUEST._serialized_start=23943
  _TAXONOMYFILTEREDSUBTREEREQUEST._serialized_end=24234
  _TAXONOMYFILTEREDSUBTREERESPONSE._serialized_start=24237
  _TAXONOMYFILTEREDSUBTREERESPONSE._serialized_end=24844
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGE._serialized_start=24492
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGE._serialized_end=24730
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGE_CHILDSTATUS._serialized_start=24652
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGE_CHILDSTATUS._serialized_end=24730
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGESENTRY._serialized_start=24732
  _TAXONOMYFILTEREDSUBTREERESPONSE_EDGESENTRY._serialized_end=24844
  _DATASETREQUEST._serialized_start=24847
  _DATASETREQUEST._serialized_end=25080
# @@protoc_insertion_point(module_scope)
