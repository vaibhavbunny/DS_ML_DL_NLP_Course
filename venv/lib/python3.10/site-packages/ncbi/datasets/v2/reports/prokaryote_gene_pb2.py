# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ncbi/datasets/v2/reports/prokaryote_gene.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ncbi.datasets.v2.reports import common_pb2 as ncbi_dot_datasets_dot_v2_dot_reports_dot_common__pb2
from ncbi.datasets.options import report_pb2 as ncbi_dot_datasets_dot_options_dot_report__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.ncbi/datasets/v2/reports/prokaryote_gene.proto\x12\x18ncbi.datasets.v2.reports\x1a%ncbi/datasets/v2/reports/common.proto\x1a\"ncbi/datasets/options/report.proto\"\xfb\x08\n\x0eProkaryoteGene\x12H\n\taccession\x18\x01 \x01(\tB*\xc2\xf3\x18&\n\taccession\x12\tAccession2\x0eWP_000443665.1R\taccession\x12\x45\n\x0bgene_symbol\x18\x02 \x01(\tB$\xc2\xf3\x18 \n\x0bgene-symbol\x12\x0bGene Symbol2\x04ligAR\ngeneSymbol\x12\x62\n\x0cprotein_name\x18\x03 \x01(\tB?\xc2\xf3\x18;\n\x0cprotein-name\x12\x0cProtein Name2\x1dNAD-dependent DNA ligase LigAR\x0bproteinName\x12P\n\x0eprotein_length\x18\x04 \x01(\rB)\xc2\xf3\x18%\n\x0eprotein-length\x12\x0eProtein Length2\x03\x36\x37\x31R\rproteinLength\x12I\n\x0etaxonomy_scope\x18\x05 \x01(\x0b\x32\".ncbi.datasets.v2.reports.OrganismR\rtaxonomyScope\x12o\n\x19number_of_genome_mappings\x18\x06 \x01(\rB4\xc2\xf3\x18\x30\n\rmapping-count\x12\x19Number of Genome Mappings2\x04\x37\x36\x34\x32R\x16numberOfGenomeMappings\x12\x9d\x01\n\x15protein_name_evidence\x18\x07 \x01(\x0b\x32<.ncbi.datasets.v2.reports.ProkaryoteGene.ProteinNameEvidenceB+\xc2\xf3\x18\'\n\x0ename-evidence-\x12\x15Protein Name EvidenceR\x13proteinNameEvidence\x12\xa0\x01\n\x0b\x64\x65scription\x18\x08 \x01(\tB~\xc2\xf3\x18z\n\x0b\x64\x65scription\x12\x0b\x44\x65scription2^Catalyzes the formation of a phosphodiester at the site of a single-strand break in duplex DNAR\x0b\x64\x65scription\x12@\n\tec_number\x18\t \x03(\tB#\xc2\xf3\x18\x1f\n\tec-number\x12\tEC Number2\x07\x36.5.1.2R\x08\x65\x63Number\x1a\xe0\x01\n\x13ProteinNameEvidence\x12\x44\n\taccession\x18\x01 \x01(\tB&\xc2\xf3\x18\"\n\taccession\x12\tAccession2\nNF005932.1R\taccession\x12\x39\n\x08\x63\x61tegory\x18\x02 \x01(\tB\x1d\xc2\xf3\x18\x19\n\x08\x63\x61tegory\x12\x08\x43\x61tegory2\x03HMMR\x08\x63\x61tegory\x12H\n\x06source\x18\x03 \x01(\tB0\xc2\xf3\x18,\n\x06source\x12\x06Source2\x1aNCBI Protein Cluster (PRK)R\x06sourceB\xde\nZ\x18ncbi/datasets/v2/reports\xf8\x01\x01\xc2\xf3\x18\xbc\n\n\x16Prokaryote Gene Report\x12\x0eProkaryoteGene\x1aN<p>The downloaded prokaryote package contains a prokaryote gene data report in\x1a:<a href=\"https://jsonlines.readthedocs.io/\">JSON Lines</a>\x1aPformat in the file:<br><br><em> ncbi_dataset/data/data_report.jsonl</em><br><br>\x1a\x43\x45\x61\x63h line of the prokaryote gene data report file is a hierarchical\x1a\x34<a href=\"https://www.json.org/json-en.html\">JSON</a>\x1a`object that represents a single prokaryote gene record. The schema of the prokaryote gene record\x1ahis defined in the tables below where each row describes a single field in the report or a sub-structure,\x1a\x66which is a collection of fields. The outermost structure of the report is <em>ProkaryoteGene</em>.</p>\x1aQ<p>Table fields that include a <em>Table Field Mnemonic</em> can be used with the\x1a\x66<a href=\"/datasets/docs/v2/reference-docs/command-line/dataformat/\">dataformat</a> command-line tool\'s\x1a\x37<nobr><code>--fields</code></nobr> option. Refer to the\x1at<a href=\"/datasets/docs/v2/reference-docs/command-line/dataformat/\">dataformat</a> CLI tool reference to see how you\x1a\x63\x63\x61n use this tool to transform prokaryote gene data reports from JSON Lines to tabular formats.</p>\"\x0bOrientation\"\x0bSeqRangeSet\"\x05Range*\x94\x01{{< readfile-code-block lang=\"json\" file=\"/docs_samples/datasets-cli/prok-gene-report.cli.output\" begin=\"START data-report\" end=\"END data-report\">}}b\x06proto3')



_PROKARYOTEGENE = DESCRIPTOR.message_types_by_name['ProkaryoteGene']
_PROKARYOTEGENE_PROTEINNAMEEVIDENCE = _PROKARYOTEGENE.nested_types_by_name['ProteinNameEvidence']
ProkaryoteGene = _reflection.GeneratedProtocolMessageType('ProkaryoteGene', (_message.Message,), {

  'ProteinNameEvidence' : _reflection.GeneratedProtocolMessageType('ProteinNameEvidence', (_message.Message,), {
    'DESCRIPTOR' : _PROKARYOTEGENE_PROTEINNAMEEVIDENCE,
    '__module__' : 'ncbi.datasets.v2.reports.prokaryote_gene_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v2.reports.ProkaryoteGene.ProteinNameEvidence)
    })
  ,
  'DESCRIPTOR' : _PROKARYOTEGENE,
  '__module__' : 'ncbi.datasets.v2.reports.prokaryote_gene_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v2.reports.ProkaryoteGene)
  })
_sym_db.RegisterMessage(ProkaryoteGene)
_sym_db.RegisterMessage(ProkaryoteGene.ProteinNameEvidence)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\030ncbi/datasets/v2/reports\370\001\001\302\363\030\274\n\n\026Prokaryote Gene Report\022\016ProkaryoteGene\032N<p>The downloaded prokaryote package contains a prokaryote gene data report in\032:<a href=\"https://jsonlines.readthedocs.io/\">JSON Lines</a>\032Pformat in the file:<br><br><em> ncbi_dataset/data/data_report.jsonl</em><br><br>\032CEach line of the prokaryote gene data report file is a hierarchical\0324<a href=\"https://www.json.org/json-en.html\">JSON</a>\032`object that represents a single prokaryote gene record. The schema of the prokaryote gene record\032his defined in the tables below where each row describes a single field in the report or a sub-structure,\032fwhich is a collection of fields. The outermost structure of the report is <em>ProkaryoteGene</em>.</p>\032Q<p>Table fields that include a <em>Table Field Mnemonic</em> can be used with the\032f<a href=\"/datasets/docs/v2/reference-docs/command-line/dataformat/\">dataformat</a> command-line tool\'s\0327<nobr><code>--fields</code></nobr> option. Refer to the\032t<a href=\"/datasets/docs/v2/reference-docs/command-line/dataformat/\">dataformat</a> CLI tool reference to see how you\032ccan use this tool to transform prokaryote gene data reports from JSON Lines to tabular formats.</p>\"\013Orientation\"\013SeqRangeSet\"\005Range*\224\001{{< readfile-code-block lang=\"json\" file=\"/docs_samples/datasets-cli/prok-gene-report.cli.output\" begin=\"START data-report\" end=\"END data-report\">}}'
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['accession']._options = None
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['accession']._serialized_options = b'\302\363\030\"\n\taccession\022\tAccession2\nNF005932.1'
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['category']._options = None
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['category']._serialized_options = b'\302\363\030\031\n\010category\022\010Category2\003HMM'
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['source']._options = None
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['source']._serialized_options = b'\302\363\030,\n\006source\022\006Source2\032NCBI Protein Cluster (PRK)'
  _PROKARYOTEGENE.fields_by_name['accession']._options = None
  _PROKARYOTEGENE.fields_by_name['accession']._serialized_options = b'\302\363\030&\n\taccession\022\tAccession2\016WP_000443665.1'
  _PROKARYOTEGENE.fields_by_name['gene_symbol']._options = None
  _PROKARYOTEGENE.fields_by_name['gene_symbol']._serialized_options = b'\302\363\030 \n\013gene-symbol\022\013Gene Symbol2\004ligA'
  _PROKARYOTEGENE.fields_by_name['protein_name']._options = None
  _PROKARYOTEGENE.fields_by_name['protein_name']._serialized_options = b'\302\363\030;\n\014protein-name\022\014Protein Name2\035NAD-dependent DNA ligase LigA'
  _PROKARYOTEGENE.fields_by_name['protein_length']._options = None
  _PROKARYOTEGENE.fields_by_name['protein_length']._serialized_options = b'\302\363\030%\n\016protein-length\022\016Protein Length2\003671'
  _PROKARYOTEGENE.fields_by_name['number_of_genome_mappings']._options = None
  _PROKARYOTEGENE.fields_by_name['number_of_genome_mappings']._serialized_options = b'\302\363\0300\n\rmapping-count\022\031Number of Genome Mappings2\0047642'
  _PROKARYOTEGENE.fields_by_name['protein_name_evidence']._options = None
  _PROKARYOTEGENE.fields_by_name['protein_name_evidence']._serialized_options = b'\302\363\030\'\n\016name-evidence-\022\025Protein Name Evidence'
  _PROKARYOTEGENE.fields_by_name['description']._options = None
  _PROKARYOTEGENE.fields_by_name['description']._serialized_options = b'\302\363\030z\n\013description\022\013Description2^Catalyzes the formation of a phosphodiester at the site of a single-strand break in duplex DNA'
  _PROKARYOTEGENE.fields_by_name['ec_number']._options = None
  _PROKARYOTEGENE.fields_by_name['ec_number']._serialized_options = b'\302\363\030\037\n\tec-number\022\tEC Number2\0076.5.1.2'
  _PROKARYOTEGENE._serialized_start=152
  _PROKARYOTEGENE._serialized_end=1299
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE._serialized_start=1075
  _PROKARYOTEGENE_PROTEINNAMEEVIDENCE._serialized_end=1299
# @@protoc_insertion_point(module_scope)
